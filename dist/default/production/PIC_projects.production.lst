

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue May 02 16:54:22 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Version 2.40
    52                           ; Generated 17/11/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4620 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   001B44                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _lat_registers
    92   001B44  89                 	db	137
    93   001B45  0F                 	db	15
    94   001B46  8A                 	db	138
    95   001B47  0F                 	db	15
    96   001B48  8B                 	db	139
    97   001B49  0F                 	db	15
    98   001B4A  8C                 	db	140
    99   001B4B  0F                 	db	15
   100   001B4C  8D                 	db	141
   101   001B4D  0F                 	db	15
   102                           
   103                           ;initializer for _motor2
   104   001B4E  1B                 	db	27
   105   001B4F  23                 	db	35
   106                           
   107                           ;initializer for _motor1
   108   001B50  0B                 	db	11
   109   001B51  13                 	db	19
   110                           
   111                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3170
   112   001B52  A8                 	db	168
   113                           
   114                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3168
   115   001B53  9A                 	db	154
   116                           
   117                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3166
   118   001B54  A2                 	db	162
   119                           
   120                           ;initializer for MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3164
   121   001B55  2A                 	db	42
   122                           
   123                           ;initializer for MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3160
   124   001B56  1A                 	db	26
   125                           
   126                           ;initializer for MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3158
   127   001B57  A2                 	db	162
   128                           
   129                           ;initializer for MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3156
   130   001B58  2A                 	db	42
   131                           
   132                           ;initializer for _ret_state
   133   001B59  01                 	db	1
   134                           
   135                           ;initializer for _BUTTON1
   136   001B5A  81                 	db	129
   137                           
   138                           ;initializer for _RB7_Flag
   139   001B5B  01                 	db	1
   140                           
   141                           ;initializer for _RB6_Flag
   142   001B5C  01                 	db	1
   143                           
   144                           ;initializer for _RB5_Flag
   145   001B5D  01                 	db	1
   146                           
   147                           ;initializer for _RB4_Flag
   148   001B5E  01                 	db	1
   149                           
   150                           ;initializer for _SPI_SS
   151   001B5F  43                 	db	67
   152                           
   153                           ;initializer for _led3
   154   001B60  03                 	db	3
   155                           
   156                           ;initializer for _led2
   157   001B61  0A                 	db	10
   158                           
   159                           ;initializer for _led1
   160   001B62  02                 	db	2
   161                           
   162                           	psect	idataBANK0
   163   00196E                     __pidataBANK0:
   164                           	callstack 0
   165                           
   166                           ;initializer for _usart_obj1
   167   00196E  2580               	dw	9600
   168   001970  0000               	dw	0
   169   001972  01                 	db	1
   170   001973  00                 	db	0
   171   001974  01                 	db	1
   172   001975  00                 	db	0
   173   001976  00                 	db	0
   174   001977  00                 	db	0
   175   001978  00                 	db	0
   176   001979  00                 	db	0
   177   00197A  00                 	db	0
   178   00197B  00                 	db	0
   179   00197C  00                 	db	0
   180   00197D  00                 	db	0
   181   00197E  00                 	db	0
   182   00197F  00                 	db	0
   183                           
   184                           ;initializer for _keypad_values
   185   001980  37                 	db	55
   186   001981  38                 	db	56
   187   001982  39                 	db	57
   188   001983  2F                 	db	47
   189   001984  34                 	db	52
   190   001985  35                 	db	53
   191   001986  36                 	db	54
   192   001987  2A                 	db	42
   193   001988  31                 	db	49
   194   001989  32                 	db	50
   195   00198A  33                 	db	51
   196   00198B  2D                 	db	45
   197   00198C  23                 	db	35
   198   00198D  30                 	db	48
   199   00198E  3D                 	db	61
   200   00198F  2B                 	db	43
   201                           
   202                           ;initializer for _lcd2
   203   001990  32                 	db	50
   204   001991  3A                 	db	58
   205   001992  03                 	db	3
   206   001993  0B                 	db	11
   207   001994  13                 	db	19
   208   001995  1B                 	db	27
   209   001996  23                 	db	35
   210   001997  2B                 	db	43
   211   001998  33                 	db	51
   212   001999  3B                 	db	59
   213                           
   214                           ;initializer for _port_registers
   215   00199A  80                 	db	128
   216   00199B  0F                 	db	15
   217   00199C  81                 	db	129
   218   00199D  0F                 	db	15
   219   00199E  81                 	db	129
   220   00199F  0F                 	db	15
   221   0019A0  83                 	db	131
   222   0019A1  0F                 	db	15
   223   0019A2  84                 	db	132
   224   0019A3  0F                 	db	15
   225                           
   226                           ;initializer for _tris_registers
   227   0019A4  92                 	db	146
   228   0019A5  0F                 	db	15
   229   0019A6  93                 	db	147
   230   0019A7  0F                 	db	15
   231   0019A8  94                 	db	148
   232   0019A9  0F                 	db	15
   233   0019AA  95                 	db	149
   234   0019AB  0F                 	db	15
   235   0019AC  96                 	db	150
   236   0019AD  0F                 	db	15
   237                           
   238                           ;initializer for _keypad1
   239   0019AE  02                 	db	2
   240   0019AF  0A                 	db	10
   241   0019B0  12                 	db	18
   242   0019B1  1A                 	db	26
   243   0019B2  A2                 	db	162
   244   0019B3  AA                 	db	170
   245   0019B4  B2                 	db	178
   246   0019B5  BA                 	db	186
   247                           
   248                           ;initializer for _lcd1
   249   0019B6  02                 	db	2
   250   0019B7  0A                 	db	10
   251   0019B8  12                 	db	18
   252   0019B9  1A                 	db	26
   253   0019BA  22                 	db	34
   254   0019BB  2A                 	db	42
   255                           
   256                           ;initializer for _spi_obj1_slave
   257   0019BC  04                 	db	4
   258   0019BD  11                 	db	17
   259   0019BE  00                 	db	0
   260   0019BF  00                 	db	0
   261   0019C0  00                 	db	0
   262                           
   263                           ;initializer for _sev_seg1
   264   0019C1  02                 	db	2
   265   0019C2  0A                 	db	10
   266   0019C3  12                 	db	18
   267   0019C4  1A                 	db	26
   268   0019C5  01                 	db	1
   269                           
   270                           ;initializer for _spi_obj1_master
   271   0019C6  01                 	db	1
   272   0019C7  11                 	db	17
   273   0019C8  CC                 	db	low _led2_func
   274   0019C9  1B                 	db	high _led2_func
   275   0019CA  00                 	db	0
   276   000000                     _SPBRGH	set	4016
   277   000000                     _SPBRG	set	4015
   278   000000                     _TXREG	set	4013
   279   000000                     _TXSTAbits	set	4012
   280   000000                     _RCREG	set	4014
   281   000000                     _RCSTAbits	set	4011
   282   000000                     _TMR3L	set	4018
   283   000000                     _TMR3H	set	4019
   284   000000                     _TMR2	set	4044
   285   000000                     _TMR1L	set	4046
   286   000000                     _TMR1H	set	4047
   287   000000                     _T1CONbits	set	4045
   288   000000                     _TMR0L	set	4054
   289   000000                     _TMR0H	set	4055
   290   000000                     _T0CONbits	set	4053
   291   000000                     _INTCON2bits	set	4081
   292   000000                     _INTCON3bits	set	4080
   293   000000                     _EECON2	set	4007
   294   000000                     _ADCON1bits	set	4033
   295   000000                     _ADRESL	set	4035
   296   000000                     _ADRESH	set	4036
   297   000000                     _INTCONbits	set	4082
   298   000000                     _TRISCbits	set	3988
   299   000000                     _PORTBbits	set	3969
   300   000000                     _PORTB	set	3969
   301   000000                     _PIE1bits	set	3997
   302   000000                     _ADCON2bits	set	4032
   303   000000                     _ADCON0bits	set	4034
   304   000000                     _LATE	set	3981
   305   000000                     _LATD	set	3980
   306   000000                     _PIE2bits	set	4000
   307   000000                     _CCP2CONbits	set	4026
   308   000000                     _CCP1CONbits	set	4029
   309   000000                     _PIR1bits	set	3998
   310   000000                     _SSPCON1bits	set	4038
   311   000000                     _T2CONbits	set	4042
   312   000000                     _PR2	set	4043
   313   000000                     _CCPR1L	set	4030
   314   000000                     _CCPR2L	set	4027
   315   000000                     _EECON1bits	set	4006
   316   000000                     _EEDATA	set	4008
   317   000000                     _EEADR	set	4009
   318   000000                     _EEADRH	set	4010
   319   000000                     _T3CONbits	set	4017
   320   000000                     _PIR2bits	set	4001
   321   000000                     _BAUDCONbits	set	4024
   322   000000                     _SSPBUF	set	4041
   323   000000                     _SSPSTATbits	set	4039
   324                           
   325                           	psect	smallconst
   326   001000                     __psmallconst:
   327                           	callstack 0
   328   001000  00                 	db	0
   329   001001                     STR_1:
   330   001001  25                 	db	37
   331   001002  69                 	db	105	;'i'
   332   001003  00                 	db	0
   333   001004  00                 	db	0	; dummy byte at the end
   334   000000                     
   335                           ; #config settings
   336                           
   337                           	psect	cinit
   338   001A28                     __pcinit:
   339                           	callstack 0
   340   001A28                     start_initialization:
   341                           	callstack 0
   342   001A28                     __initialization:
   343                           	callstack 0
   344                           
   345                           ; Initialize objects allocated to BANK0 (93 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347   001A28  0E6E               	movlw	low __pidataBANK0
   348   001A2A  6EF6               	movwf	tblptrl,c
   349   001A2C  0E19               	movlw	high __pidataBANK0
   350   001A2E  6EF7               	movwf	tblptrh,c
   351   001A30  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352   001A32  6EF8               	movwf	tblptru,c
   353   001A34  EE00  F080         	lfsr	0,__pdataBANK0
   354   001A38  EE10 F05D          	lfsr	1,93
   355   001A3C                     copy_data0:
   356   001A3C  0009               	tblrd		*+
   357   001A3E  CFF5 FFEE          	movff	tablat,postinc0
   358   001A42  50E5               	movf	postdec1,w,c
   359   001A44  50E1               	movf	fsr1l,w,c
   360   001A46  E1FA               	bnz	copy_data0
   361                           
   362                           ; Initialize objects allocated to COMRAM (31 bytes)
   363                           ; load TBLPTR registers with __pidataCOMRAM
   364   001A48  0E44               	movlw	low __pidataCOMRAM
   365   001A4A  6EF6               	movwf	tblptrl,c
   366   001A4C  0E1B               	movlw	high __pidataCOMRAM
   367   001A4E  6EF7               	movwf	tblptrh,c
   368   001A50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   369   001A52  6EF8               	movwf	tblptru,c
   370   001A54  EE00  F03B         	lfsr	0,__pdataCOMRAM
   371   001A58  EE10 F01F          	lfsr	1,31
   372   001A5C                     copy_data1:
   373   001A5C  0009               	tblrd		*+
   374   001A5E  CFF5 FFEE          	movff	tablat,postinc0
   375   001A62  50E5               	movf	postdec1,w,c
   376   001A64  50E1               	movf	fsr1l,w,c
   377   001A66  E1FA               	bnz	copy_data1
   378                           
   379                           ; Clear objects allocated to COMRAM (58 bytes)
   380   001A68  EE00  F001         	lfsr	0,__pbssCOMRAM
   381   001A6C  0E3A               	movlw	58
   382   001A6E                     clear_0:
   383   001A6E  6AEE               	clrf	postinc0,c
   384   001A70  06E8               	decf	wreg,f,c
   385   001A72  E1FD               	bnz	clear_0
   386   001A74                     end_of_initialization:
   387                           	callstack 0
   388   001A74                     __end_of__initialization:
   389                           	callstack 0
   390   001A74  9072               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   391   001A76  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   392   001A78  0100               	movlb	0
   393   001A7A  EFE8  F00B         	goto	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMRAM
   396   000001                     __pbssCOMRAM:
   397                           	callstack 0
   398   000001                     _SPI_InterruptHandler:
   399                           	callstack 0
   400   000001                     	ds	2
   401   000003                     _EUSART_OverrunErrorHandler:
   402                           	callstack 0
   403   000003                     	ds	2
   404   000005                     _EUSART_FramingErrorHandler:
   405                           	callstack 0
   406   000005                     	ds	2
   407   000007                     _EUSART_RxInterruptHandler:
   408                           	callstack 0
   409   000007                     	ds	2
   410   000009                     _EUSART_TxInterruptHandler:
   411                           	callstack 0
   412   000009                     	ds	2
   413   00000B                     _timer3_preload:
   414                           	callstack 0
   415   00000B                     	ds	2
   416   00000D                     _TMR3_InterruptHandler:
   417                           	callstack 0
   418   00000D                     	ds	2
   419   00000F                     _TMR2_InterruptHandler:
   420                           	callstack 0
   421   00000F                     	ds	2
   422   000011                     _timer1_preload:
   423                           	callstack 0
   424   000011                     	ds	2
   425   000013                     _TMR1_InterruptHandler:
   426                           	callstack 0
   427   000013                     	ds	2
   428   000015                     _timer0_preload:
   429                           	callstack 0
   430   000015                     	ds	2
   431   000017                     _TMR0_InterruptHandler:
   432                           	callstack 0
   433   000017                     	ds	2
   434   000019                     _RB7_InterruptHandler_LOW:
   435                           	callstack 0
   436   000019                     	ds	2
   437   00001B                     _RB7_InterruptHandler_HIGH:
   438                           	callstack 0
   439   00001B                     	ds	2
   440   00001D                     _RB6_InterruptHandler_LOW:
   441                           	callstack 0
   442   00001D                     	ds	2
   443   00001F                     _RB6_InterruptHandler_HIGH:
   444                           	callstack 0
   445   00001F                     	ds	2
   446   000021                     _RB5_InterruptHandler_LOW:
   447                           	callstack 0
   448   000021                     	ds	2
   449   000023                     _RB5_InterruptHandler_HIGH:
   450                           	callstack 0
   451   000023                     	ds	2
   452   000025                     _RB4_InterruptHandler_LOW:
   453                           	callstack 0
   454   000025                     	ds	2
   455   000027                     _RB4_InterruptHandler_HIGH:
   456                           	callstack 0
   457   000027                     	ds	2
   458   000029                     _INT2_InterruptHandler:
   459                           	callstack 0
   460   000029                     	ds	2
   461   00002B                     _INT1_InterruptHandler:
   462                           	callstack 0
   463   00002B                     	ds	2
   464   00002D                     _INT0_InterruptHandler:
   465                           	callstack 0
   466   00002D                     	ds	2
   467   00002F                     _CCP2_InterruptHandler:
   468                           	callstack 0
   469   00002F                     	ds	2
   470   000031                     _CCP1_InterruptHandler:
   471                           	callstack 0
   472   000031                     	ds	2
   473   000033                     _ADC_InterruptHandler:
   474                           	callstack 0
   475   000033                     	ds	2
   476   000035                     _val1:
   477                           	callstack 0
   478   000035                     	ds	1
   479   000036                     _port_state:
   480                           	callstack 0
   481   000036                     	ds	1
   482   000037                     _button_val:
   483                           	callstack 0
   484   000037                     	ds	1
   485   000038                     _master_val:
   486                           	callstack 0
   487   000038                     	ds	1
   488   000039                     _program_selector:
   489                           	callstack 0
   490   000039                     	ds	1
   491   00003A                     _timer2_preload:
   492                           	callstack 0
   493   00003A                     	ds	1
   494                           
   495                           	psect	dataCOMRAM
   496   00003B                     __pdataCOMRAM:
   497                           	callstack 0
   498   00003B                     _lat_registers:
   499                           	callstack 0
   500   00003B                     	ds	10
   501   000045                     _motor2:
   502                           	callstack 0
   503   000045                     	ds	2
   504   000047                     _motor1:
   505                           	callstack 0
   506   000047                     	ds	2
   507   000049                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3170:
   508                           	callstack 0
   509   000049                     	ds	1
   510   00004A                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3168:
   511                           	callstack 0
   512   00004A                     	ds	1
   513   00004B                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3166:
   514                           	callstack 0
   515   00004B                     	ds	1
   516   00004C                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3164:
   517                           	callstack 0
   518   00004C                     	ds	1
   519   00004D                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3160:
   520                           	callstack 0
   521   00004D                     	ds	1
   522   00004E                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3158:
   523                           	callstack 0
   524   00004E                     	ds	1
   525   00004F                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3156:
   526                           	callstack 0
   527   00004F                     	ds	1
   528   000050                     _ret_state:
   529                           	callstack 0
   530   000050                     	ds	1
   531   000051                     _BUTTON1:
   532                           	callstack 0
   533   000051                     	ds	1
   534   000052                     _RB7_Flag:
   535                           	callstack 0
   536   000052                     	ds	1
   537   000053                     _RB6_Flag:
   538                           	callstack 0
   539   000053                     	ds	1
   540   000054                     _RB5_Flag:
   541                           	callstack 0
   542   000054                     	ds	1
   543   000055                     _RB4_Flag:
   544                           	callstack 0
   545   000055                     	ds	1
   546   000056                     _SPI_SS:
   547                           	callstack 0
   548   000056                     	ds	1
   549   000057                     _led3:
   550                           	callstack 0
   551   000057                     	ds	1
   552   000058                     _led2:
   553                           	callstack 0
   554   000058                     	ds	1
   555   000059                     _led1:
   556                           	callstack 0
   557   000059                     	ds	1
   558                           
   559                           	psect	dataBANK0
   560   000080                     __pdataBANK0:
   561                           	callstack 0
   562   000080                     _usart_obj1:
   563                           	callstack 0
   564   000080                     	ds	18
   565   000092                     _keypad_values:
   566                           	callstack 0
   567   000092                     	ds	16
   568   0000A2                     _lcd2:
   569                           	callstack 0
   570   0000A2                     	ds	10
   571   0000AC                     _port_registers:
   572                           	callstack 0
   573   0000AC                     	ds	10
   574   0000B6                     _tris_registers:
   575                           	callstack 0
   576   0000B6                     	ds	10
   577   0000C0                     _keypad1:
   578                           	callstack 0
   579   0000C0                     	ds	8
   580   0000C8                     _lcd1:
   581                           	callstack 0
   582   0000C8                     	ds	6
   583   0000CE                     _spi_obj1_slave:
   584                           	callstack 0
   585   0000CE                     	ds	5
   586   0000D3                     _sev_seg1:
   587                           	callstack 0
   588   0000D3                     	ds	5
   589   0000D8                     _spi_obj1_master:
   590                           	callstack 0
   591   0000D8                     	ds	5
   592                           
   593                           	psect	cstackBANK0
   594   0000DD                     __pcstackBANK0:
   595                           	callstack 0
   596   0000DD                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO:
   597                           	callstack 0
   598   0000DD                     gpio_pin_initialize@_pin_config:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x0
   602   0000DD                     	ds	1
   603   0000DE                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI:
   604                           	callstack 0
   605   0000DE                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x1
   609   0000DE                     	ds	1
   610   0000DF                     gpio_pin_initialize@ret:
   611                           	callstack 0
   612   0000DF                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK:
   613                           	callstack 0
   614   0000DF                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x2
   618   0000DF                     	ds	1
   619   0000E0                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623   0000E0                     	ds	1
   624   0000E1                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x4
   628   0000E1                     	ds	1
   629   0000E2                     MSSP_SPI_Mode_Initialize@SPI_Inst:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x5
   633   0000E2                     	ds	2
   634   0000E4                     ??_MSSP_SPI_Mode_Initialize:
   635                           
   636                           ; 1 bytes @ 0x7
   637   0000E4                     	ds	1
   638   0000E5                     ??_main:
   639                           
   640                           ; 1 bytes @ 0x8
   641   0000E5                     	ds	2
   642                           
   643                           	psect	cstackCOMRAM
   644   00005A                     __pcstackCOMRAM:
   645                           	callstack 0
   646   00005A                     RB4_ISR@RB4_Source:
   647                           	callstack 0
   648   00005A                     RB5_ISR@RB5_Source:
   649                           	callstack 0
   650   00005A                     RB6_ISR@RB6_Source:
   651                           	callstack 0
   652   00005A                     RB7_ISR@RB7_Source:
   653                           	callstack 0
   654   00005A                     gpio_pin_toggle_logic@_pin_config:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x0
   658   00005A                     	ds	2
   659   00005C                     ??_gpio_pin_toggle_logic:
   660                           
   661                           ; 1 bytes @ 0x2
   662   00005C                     	ds	5
   663   000061                     ??_InterruptManager:
   664                           
   665                           ; 1 bytes @ 0x7
   666   000061                     	ds	6
   667   000067                     gpio_pin_direction_initialize@_pin_config:
   668                           	callstack 0
   669   000067                     gpio_pin_write_logic@_pin_config:
   670                           	callstack 0
   671   000067                     SPI_Send_Byte@SPI_Inst:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0xD
   675   000067                     	ds	2
   676   000069                     ??_gpio_pin_direction_initialize:
   677   000069                     gpio_pin_write_logic@logic:
   678                           	callstack 0
   679   000069                     SPI_Send_Byte@_data:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0xF
   683   000069                     	ds	1
   684   00006A                     ??_gpio_pin_write_logic:
   685   00006A                     
   686                           ; 1 bytes @ 0x10
   687   00006A                     	ds	5
   688   00006F                     gpio_pin_direction_initialize@ret:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x15
   692   00006F                     	ds	1
   693   000070                     gpio_pin_write_logic@ret:
   694                           	callstack 0
   695   000070                     MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_Inst:
   696                           	callstack 0
   697   000070                     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_Inst:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x16
   701   000070                     	ds	1
   702   000071                     ??_gpio_pin_initialize:
   703                           
   704                           ; 1 bytes @ 0x17
   705   000071                     	ds	1
   706   000072                     
   707                           ; 1 bytes @ 0x18
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 18 in file "application.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  2  1889[None  ] int 
   720 ;; Registers used:
   721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels required when called: 8
   733 ;; This function calls:
   734 ;;		_SPI_Send_Byte
   735 ;;		_gpio_pin_write_logic
   736 ;;		_initalize
   737 ;; This function is called by:
   738 ;;		Startup code after reset
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text0
   743   0017D0                     __ptext0:
   744                           	callstack 0
   745   0017D0                     _main:
   746                           	callstack 23
   747   0017D0                     
   748                           ;application.c: 20:     initalize ();
   749   0017D0  EC3F  F00D         	call	_initalize	;wreg free
   750                           
   751                           ;application.c: 21:     gpio_pin_write_logic(&SPI_SS,GPIO_LOW);
   752   0017D4  0E56               	movlw	low _SPI_SS
   753   0017D6  6E67               	movwf	gpio_pin_write_logic@_pin_config^0,c
   754   0017D8  0E00               	movlw	high _SPI_SS
   755   0017DA  6E68               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
   756   0017DC  0E00               	movlw	0
   757   0017DE  6E69               	movwf	gpio_pin_write_logic@logic^0,c
   758   0017E0  EC52  F00B         	call	_gpio_pin_write_logic	;wreg free
   759   0017E4                     l6688:
   760                           
   761                           ;application.c: 25:     {;application.c: 26:         SPI_Send_Byte(&spi_obj1_master,'a')
      +                          ;
   762   0017E4  0ED8               	movlw	low _spi_obj1_master
   763   0017E6  6E67               	movwf	SPI_Send_Byte@SPI_Inst^0,c
   764   0017E8  0E00               	movlw	high _spi_obj1_master
   765   0017EA  6E68               	movwf	(SPI_Send_Byte@SPI_Inst+1)^0,c
   766   0017EC  0E61               	movlw	97
   767   0017EE  6E69               	movwf	SPI_Send_Byte@_data^0,c
   768   0017F0  EC8C  F00D         	call	_SPI_Send_Byte	;wreg free
   769   0017F4                     
   770                           ;application.c: 27:         _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   771   0017F4  0E0B               	movlw	11
   772   0017F6  0100               	movlb	0	; () banked
   773   0017F8  6FE6               	movwf	(??_main+1)& (0+255),b
   774   0017FA  0E26               	movlw	38
   775   0017FC  6FE5               	movwf	??_main& (0+255),b
   776   0017FE  0E5D               	movlw	93
   777   001800                     u5307:
   778   001800  2EE8               	decfsz	wreg,f,c
   779   001802  D7FE               	bra	u5307
   780   001804  2FE5               	decfsz	??_main& (0+255),f,b
   781   001806  D7FC               	bra	u5307
   782   001808  2FE6               	decfsz	(??_main+1)& (0+255),f,b
   783   00180A  D7FA               	bra	u5307
   784   00180C  D000               	nop2	
   785   00180E                     
   786                           ;application.c: 28:         SPI_Send_Byte(&spi_obj1_master,'b');
   787   00180E  0ED8               	movlw	low _spi_obj1_master
   788   001810  6E67               	movwf	SPI_Send_Byte@SPI_Inst^0,c
   789   001812  0E00               	movlw	high _spi_obj1_master
   790   001814  6E68               	movwf	(SPI_Send_Byte@SPI_Inst+1)^0,c
   791   001816  0E62               	movlw	98
   792   001818  6E69               	movwf	SPI_Send_Byte@_data^0,c
   793   00181A  EC8C  F00D         	call	_SPI_Send_Byte	;wreg free
   794   00181E                     
   795                           ;application.c: 29:         _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   796   00181E  0E0B               	movlw	11
   797   001820  0100               	movlb	0	; () banked
   798   001822  6FE6               	movwf	(??_main+1)& (0+255),b
   799   001824  0E26               	movlw	38
   800   001826  6FE5               	movwf	??_main& (0+255),b
   801   001828  0E5D               	movlw	93
   802   00182A                     u5317:
   803   00182A  2EE8               	decfsz	wreg,f,c
   804   00182C  D7FE               	bra	u5317
   805   00182E  2FE5               	decfsz	??_main& (0+255),f,b
   806   001830  D7FC               	bra	u5317
   807   001832  2FE6               	decfsz	(??_main+1)& (0+255),f,b
   808   001834  D7FA               	bra	u5317
   809   001836  D000               	nop2	
   810   001838                     
   811                           ;application.c: 30:         SPI_Send_Byte(&spi_obj1_master,'c');
   812   001838  0ED8               	movlw	low _spi_obj1_master
   813   00183A  6E67               	movwf	SPI_Send_Byte@SPI_Inst^0,c
   814   00183C  0E00               	movlw	high _spi_obj1_master
   815   00183E  6E68               	movwf	(SPI_Send_Byte@SPI_Inst+1)^0,c
   816   001840  0E63               	movlw	99
   817   001842  6E69               	movwf	SPI_Send_Byte@_data^0,c
   818   001844  EC8C  F00D         	call	_SPI_Send_Byte	;wreg free
   819   001848                     
   820                           ;application.c: 31:         _delay((unsigned long)((1000)*(8000000UL/4000.0)));
   821   001848  0E0B               	movlw	11
   822   00184A  0100               	movlb	0	; () banked
   823   00184C  6FE6               	movwf	(??_main+1)& (0+255),b
   824   00184E  0E26               	movlw	38
   825   001850  6FE5               	movwf	??_main& (0+255),b
   826   001852  0E5D               	movlw	93
   827   001854                     u5327:
   828   001854  2EE8               	decfsz	wreg,f,c
   829   001856  D7FE               	bra	u5327
   830   001858  2FE5               	decfsz	??_main& (0+255),f,b
   831   00185A  D7FC               	bra	u5327
   832   00185C  2FE6               	decfsz	(??_main+1)& (0+255),f,b
   833   00185E  D7FA               	bra	u5327
   834   001860  D000               	nop2	
   835   001862  EFF2  F00B         	goto	l6688
   836   001866  EF07  F000         	goto	start
   837   00186A                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _initalize *****************
   841 ;; Defined at:
   842 ;;		line 37 in file "application.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; Hardware stack levels required when called: 7
   863 ;; This function calls:
   864 ;;		_MSSP_SPI_Mode_Initialize
   865 ;;		_gpio_pin_initialize
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           	psect	text1
   872   001A7E                     __ptext1:
   873                           	callstack 0
   874   001A7E                     _initalize:
   875                           	callstack 23
   876   001A7E                     
   877                           ;application.c: 40:     MSSP_SPI_Mode_Initialize(&spi_obj1_master);
   878   001A7E  0ED8               	movlw	low _spi_obj1_master
   879   001A80  0100               	movlb	0	; () banked
   880   001A82  6FE2               	movwf	MSSP_SPI_Mode_Initialize@SPI_Inst& (0+255),b
   881   001A84  0E00               	movlw	high _spi_obj1_master
   882   001A86  6FE3               	movwf	(MSSP_SPI_Mode_Initialize@SPI_Inst+1)& (0+255),b
   883   001A88  ECFE  F009         	call	_MSSP_SPI_Mode_Initialize	;wreg free
   884                           
   885                           ;application.c: 45:     gpio_pin_initialize(&led1);
   886   001A8C  0E59               	movlw	low _led1
   887   001A8E  0100               	movlb	0	; () banked
   888   001A90  6FDD               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
   889   001A92  0E00               	movlw	high _led1
   890   001A94  6FDE               	movwf	(gpio_pin_initialize@_pin_config+1)& (0+255),b
   891   001A96  EC7E  F00C         	call	_gpio_pin_initialize	;wreg free
   892                           
   893                           ;application.c: 46:     gpio_pin_initialize(&led2);
   894   001A9A  0E58               	movlw	low _led2
   895   001A9C  0100               	movlb	0	; () banked
   896   001A9E  6FDD               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
   897   001AA0  0E00               	movlw	high _led2
   898   001AA2  6FDE               	movwf	(gpio_pin_initialize@_pin_config+1)& (0+255),b
   899   001AA4  EC7E  F00C         	call	_gpio_pin_initialize	;wreg free
   900                           
   901                           ;application.c: 47:     gpio_pin_initialize(&led3);
   902   001AA8  0E57               	movlw	low _led3
   903   001AAA  0100               	movlb	0	; () banked
   904   001AAC  6FDD               	movwf	gpio_pin_initialize@_pin_config& (0+255),b
   905   001AAE  0E00               	movlw	high _led3
   906   001AB0  6FDE               	movwf	(gpio_pin_initialize@_pin_config+1)& (0+255),b
   907   001AB2  EC7E  F00C         	call	_gpio_pin_initialize	;wreg free
   908   001AB6  0012               	return		;funcret
   909   001AB8                     __end_of_initalize:
   910                           	callstack 0
   911                           
   912 ;; *************** function _gpio_pin_initialize *****************
   913 ;; Defined at:
   914 ;;		line 99 in file "MCAL_Layer/GPIO/hal_gpio.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  _pin_config     2    0[BANK0 ] PTR const struct PIN_CON
   917 ;;		 -> led3(1), led2(1), led1(1), 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  ret             1    2[BANK0 ] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      unsigned char 
   922 ;; Registers used:
   923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:        4 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 5
   936 ;; This function calls:
   937 ;;		_gpio_pin_direction_initialize
   938 ;;		_gpio_pin_write_logic
   939 ;; This function is called by:
   940 ;;		_initalize
   941 ;;		_lcd_4bit_initialize
   942 ;;		_lcd_8bit_initialize
   943 ;;		_sev_seg_initialize
   944 ;;		_CCP_Init
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text2
   949   0018FC                     __ptext2:
   950                           	callstack 0
   951   0018FC                     _gpio_pin_initialize:
   952                           	callstack 24
   953   0018FC                     
   954                           ;MCAL_Layer/GPIO/hal_gpio.c: 99: Std_ReturnType gpio_pin_initialize(const pin_config_t *
      +                           _pin_config);MCAL_Layer/GPIO/hal_gpio.c: 100: {;MCAL_Layer/GPIO/hal_gpio.c: 101:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
   955   0018FC  0E01               	movlw	1
   956   0018FE  0100               	movlb	0	; () banked
   957   001900  6FDF               	movwf	gpio_pin_initialize@ret& (0+255),b
   958   001902                     
   959                           ; BSR set to: 0
   960                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:     if(_pin_config==((void*)0) || _pin_config->pin > (
      +                          8 - 1) )
   961   001902  51DD               	movf	gpio_pin_initialize@_pin_config& (0+255),w,b
   962   001904  11DE               	iorwf	(gpio_pin_initialize@_pin_config+1)& (0+255),w,b
   963   001906  B4D8               	btfsc	status,2,c
   964   001908  EF88  F00C         	goto	u4591
   965   00190C  EF8A  F00C         	goto	u4590
   966   001910                     u4591:
   967   001910  EF9B  F00C         	goto	l6032
   968   001914                     u4590:
   969   001914                     
   970                           ; BSR set to: 0
   971   001914  C0DD  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
   972   001918  C0DE  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
   973   00191C  30DF               	rrcf	223,w,c
   974   00191E  32E8               	rrcf	wreg,f,c
   975   001920  32E8               	rrcf	wreg,f,c
   976   001922  0B07               	andlw	7
   977   001924  6E71               	movwf	??_gpio_pin_initialize^0,c
   978   001926  0E07               	movlw	7
   979   001928  6471               	cpfsgt	??_gpio_pin_initialize^0,c
   980   00192A  EF99  F00C         	goto	u4601
   981   00192E  EF9B  F00C         	goto	u4600
   982   001932                     u4601:
   983   001932  EF9F  F00C         	goto	l6034
   984   001936                     u4600:
   985   001936                     l6032:
   986                           
   987                           ; BSR set to: 0
   988                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:     {;MCAL_Layer/GPIO/hal_gpio.c: 104:         ret = (
      +                          Std_ReturnType)0x00;
   989   001936  0E00               	movlw	0
   990   001938  6FDF               	movwf	gpio_pin_initialize@ret& (0+255),b
   991                           
   992                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:     }
   993   00193A  EFB4  F00C         	goto	l6036
   994   00193E                     l6034:
   995                           
   996                           ; BSR set to: 0
   997                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:     {;MCAL_Layer/GPIO/hal_gpio.c: 108:         gpio_pi
      +                          n_direction_initialize(_pin_config);
   998   00193E  C0DD  F067         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
   999   001942  C0DE  F068         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
  1000   001946  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1001                           
  1002                           ;MCAL_Layer/GPIO/hal_gpio.c: 109:         gpio_pin_write_logic(_pin_config, _pin_config-
      +                          >logic);
  1003   00194A  C0DD  F067         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
  1004   00194E  C0DE  F068         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
  1005   001952  C0DD  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
  1006   001956  C0DE  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
  1007   00195A  0100               	movlb	0	; () banked
  1008   00195C  0E00               	movlw	0
  1009   00195E  BCDF               	btfsc	indf2,6,c
  1010   001960  0E01               	movlw	1
  1011   001962  6E69               	movwf	gpio_pin_write_logic@logic^0,c
  1012   001964  EC52  F00B         	call	_gpio_pin_write_logic	;wreg free
  1013   001968                     l6036:
  1014                           
  1015                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:     return ret;
  1016   001968  0100               	movlb	0	; () banked
  1017   00196A  51DF               	movf	gpio_pin_initialize@ret& (0+255),w,b
  1018   00196C                     
  1019                           ; BSR set to: 0
  1020   00196C  0012               	return		;funcret
  1021   00196E                     __end_of_gpio_pin_initialize:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _gpio_pin_write_logic *****************
  1025 ;; Defined at:
  1026 ;;		line 52 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  _pin_config     2   13[COMRAM] PTR const struct PIN_CON
  1029 ;;		 -> led3(1), led2(1), SPI_SS(1), led1(1), 
  1030 ;;  logic           1   15[COMRAM] enum E2982
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  ret             1   22[COMRAM] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      unsigned char 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1042 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;Total ram usage:       10 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 4
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_gpio_pin_initialize
  1053 ;;		_main
  1054 ;;		_lcd_4bit_send_command
  1055 ;;		_lcd_4bit_send_char_data
  1056 ;;		_lcd_8bit_send_command
  1057 ;;		_lcd_8bit_send_char_data
  1058 ;;		_lcd_send_4bits
  1059 ;;		_lcd_4bit_send_enable_signal
  1060 ;;		_lcd_8bit_send_enable_signal
  1061 ;;		_DC_MOTOR_PINS_INITIALIZE
  1062 ;;		_DC_MOTOR_move_right
  1063 ;;		_DC_MOTOR_move_left
  1064 ;;		_DC_MOTOR_stop
  1065 ;;		_keypad_get_value
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text3
  1070   0016A4                     __ptext3:
  1071                           	callstack 0
  1072   0016A4                     _gpio_pin_write_logic:
  1073                           	callstack 24
  1074   0016A4                     
  1075                           ;MCAL_Layer/GPIO/hal_gpio.c: 52: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 53: {;MCAL_Layer/GPIO/hal_gpio.
      +                          c: 54:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1076   0016A4  0E01               	movlw	1
  1077   0016A6  6E70               	movwf	gpio_pin_write_logic@ret^0,c
  1078   0016A8                     
  1079                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:     if(_pin_config==((void*)0) || _pin_config->pin > (8
      +                           - 1) )
  1080   0016A8  5067               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1081   0016AA  1068               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
  1082   0016AC  B4D8               	btfsc	status,2,c
  1083   0016AE  EF5B  F00B         	goto	u4541
  1084   0016B2  EF5D  F00B         	goto	u4540
  1085   0016B6                     u4541:
  1086   0016B6  EF6E  F00B         	goto	l5996
  1087   0016BA                     u4540:
  1088   0016BA  C067  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1089   0016BE  C068  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1090   0016C2  30DF               	rrcf	223,w,c
  1091   0016C4  32E8               	rrcf	wreg,f,c
  1092   0016C6  32E8               	rrcf	wreg,f,c
  1093   0016C8  0B07               	andlw	7
  1094   0016CA  6E6A               	movwf	??_gpio_pin_write_logic^0,c
  1095   0016CC  0E07               	movlw	7
  1096   0016CE  646A               	cpfsgt	??_gpio_pin_write_logic^0,c
  1097   0016D0  EF6C  F00B         	goto	u4551
  1098   0016D4  EF6E  F00B         	goto	u4550
  1099   0016D8                     u4551:
  1100   0016D8  EFD1  F00B         	goto	l6004
  1101   0016DC                     u4550:
  1102   0016DC                     l5996:
  1103                           
  1104                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:     {;MCAL_Layer/GPIO/hal_gpio.c: 57:         ret = (St
      +                          d_ReturnType)0x00;
  1105   0016DC  0E00               	movlw	0
  1106   0016DE  6E70               	movwf	gpio_pin_write_logic@ret^0,c
  1107                           
  1108                           ;MCAL_Layer/GPIO/hal_gpio.c: 58:     }
  1109   0016E0  EFE6  F00B         	goto	l6006
  1110   0016E4                     l5998:
  1111                           
  1112                           ;MCAL_Layer/GPIO/hal_gpio.c: 64:                (*lat_registers[_pin_config->port]&=~((u
      +                          int8)1<<_pin_config->pin));
  1113   0016E4  C067  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1114   0016E8  C068  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1115   0016EC  30DF               	rrcf	223,w,c
  1116   0016EE  32E8               	rrcf	wreg,f,c
  1117   0016F0  32E8               	rrcf	wreg,f,c
  1118   0016F2  0B07               	andlw	7
  1119   0016F4  6E6A               	movwf	??_gpio_pin_write_logic^0,c
  1120   0016F6  0E01               	movlw	1
  1121   0016F8  6E6B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1122   0016FA  2A6A               	incf	??_gpio_pin_write_logic^0,f,c
  1123   0016FC  EF82  F00B         	goto	u4564
  1124   001700                     u4565:
  1125   001700  90D8               	bcf	status,0,c
  1126   001702  366B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1127   001704                     u4564:
  1128   001704  2E6A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1129   001706  EF80  F00B         	goto	u4565
  1130   00170A  506B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1131   00170C  0AFF               	xorlw	255
  1132   00170E  6E6C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1133   001710  C067  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1134   001714  C068  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1135   001718  50DF               	movf	223,w,c
  1136   00171A  0B07               	andlw	7
  1137   00171C  6E6D               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1138   00171E  506D               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1139   001720  0D02               	mullw	2
  1140   001722  0E3B               	movlw	low _lat_registers
  1141   001724  24F3               	addwf	243,w,c
  1142   001726  6ED9               	movwf	fsr2l,c
  1143   001728  0E00               	movlw	high _lat_registers
  1144   00172A  20F4               	addwfc	prodh,w,c
  1145   00172C  6EDA               	movwf	fsr2h,c
  1146   00172E  CFDE F06E          	movff	postinc2,??_gpio_pin_write_logic+4
  1147   001732  CFDD F06F          	movff	postdec2,??_gpio_pin_write_logic+5
  1148   001736  C06E  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1149   00173A  C06F  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1150   00173E  506C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1151   001740  16DF               	andwf	indf2,f,c
  1152                           
  1153                           ;MCAL_Layer/GPIO/hal_gpio.c: 65:                break;
  1154   001742  EFE6  F00B         	goto	l6006
  1155   001746                     l6000:
  1156                           
  1157                           ;MCAL_Layer/GPIO/hal_gpio.c: 67:                (*lat_registers[_pin_config->port]|=((ui
      +                          nt8)1<<_pin_config->pin));
  1158   001746  C067  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1159   00174A  C068  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1160   00174E  30DF               	rrcf	223,w,c
  1161   001750  32E8               	rrcf	wreg,f,c
  1162   001752  32E8               	rrcf	wreg,f,c
  1163   001754  0B07               	andlw	7
  1164   001756  6E6A               	movwf	??_gpio_pin_write_logic^0,c
  1165   001758  0E01               	movlw	1
  1166   00175A  6E6B               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1167   00175C  2A6A               	incf	??_gpio_pin_write_logic^0,f,c
  1168   00175E  EFB3  F00B         	goto	u4574
  1169   001762                     u4575:
  1170   001762  90D8               	bcf	status,0,c
  1171   001764  366B               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1172   001766                     u4574:
  1173   001766  2E6A               	decfsz	??_gpio_pin_write_logic^0,f,c
  1174   001768  EFB1  F00B         	goto	u4575
  1175   00176C  C067  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1176   001770  C068  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1177   001774  50DF               	movf	223,w,c
  1178   001776  0B07               	andlw	7
  1179   001778  6E6C               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1180   00177A  506C               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1181   00177C  0D02               	mullw	2
  1182   00177E  0E3B               	movlw	low _lat_registers
  1183   001780  24F3               	addwf	243,w,c
  1184   001782  6ED9               	movwf	fsr2l,c
  1185   001784  0E00               	movlw	high _lat_registers
  1186   001786  20F4               	addwfc	prodh,w,c
  1187   001788  6EDA               	movwf	fsr2h,c
  1188   00178A  CFDE F06D          	movff	postinc2,??_gpio_pin_write_logic+3
  1189   00178E  CFDD F06E          	movff	postdec2,??_gpio_pin_write_logic+4
  1190   001792  C06D  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1191   001796  C06E  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1192   00179A  506B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1193   00179C  12DF               	iorwf	indf2,f,c
  1194                           
  1195                           ;MCAL_Layer/GPIO/hal_gpio.c: 68:                break;
  1196   00179E  EFE6  F00B         	goto	l6006
  1197   0017A2                     l6004:
  1198   0017A2  5069               	movf	gpio_pin_write_logic@logic^0,w,c
  1199   0017A4  6E6A               	movwf	??_gpio_pin_write_logic^0,c
  1200   0017A6  6A6B               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1201                           
  1202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1203                           ; Switch size 1, requested type "simple"
  1204                           ; Number of cases is 1, Range of values is 0 to 0
  1205                           ; switch strategies available:
  1206                           ; Name         Instructions Cycles
  1207                           ; simple_byte            4     3 (average)
  1208                           ;	Chosen strategy is simple_byte
  1209   0017A8  506B               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1210   0017AA  0A00               	xorlw	0	; case 0
  1211   0017AC  B4D8               	btfsc	status,2,c
  1212   0017AE  EFDB  F00B         	goto	l6740
  1213   0017B2  EFE6  F00B         	goto	l6006
  1214   0017B6                     l6740:
  1215                           
  1216                           ; Switch size 1, requested type "simple"
  1217                           ; Number of cases is 2, Range of values is 0 to 1
  1218                           ; switch strategies available:
  1219                           ; Name         Instructions Cycles
  1220                           ; simple_byte            7     4 (average)
  1221                           ;	Chosen strategy is simple_byte
  1222   0017B6  506A               	movf	??_gpio_pin_write_logic^0,w,c
  1223   0017B8  0A00               	xorlw	0	; case 0
  1224   0017BA  B4D8               	btfsc	status,2,c
  1225   0017BC  EF72  F00B         	goto	l5998
  1226   0017C0  0A01               	xorlw	1	; case 1
  1227   0017C2  B4D8               	btfsc	status,2,c
  1228   0017C4  EFA3  F00B         	goto	l6000
  1229   0017C8  EFE6  F00B         	goto	l6006
  1230   0017CC                     l6006:
  1231                           
  1232                           ;MCAL_Layer/GPIO/hal_gpio.c: 71:     return ret;
  1233   0017CC  5070               	movf	gpio_pin_write_logic@ret^0,w,c
  1234   0017CE  0012               	return		;funcret
  1235   0017D0                     __end_of_gpio_pin_write_logic:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _MSSP_SPI_Mode_Initialize *****************
  1239 ;; Defined at:
  1240 ;;		line 26 in file "MCAL_Layer/SPI/hal_spi.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  SPI_Inst        2    5[BANK0 ] PTR const struct .
  1243 ;;		 -> spi_obj1_master(5), 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  ret             1    0        unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      unsigned char 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        3 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 6
  1262 ;; This function calls:
  1263 ;;		_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations
  1264 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  1265 ;; This function is called by:
  1266 ;;		_initalize
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text4
  1271   0013FC                     __ptext4:
  1272                           	callstack 0
  1273   0013FC                     _MSSP_SPI_Mode_Initialize:
  1274                           	callstack 23
  1275   0013FC                     
  1276                           ;MCAL_Layer/SPI/hal_spi.c: 29:     if(((void*)0) == SPI_Inst){
  1277   0013FC  0100               	movlb	0	; () banked
  1278   0013FE  51E2               	movf	MSSP_SPI_Mode_Initialize@SPI_Inst& (0+255),w,b
  1279   001400  11E3               	iorwf	(MSSP_SPI_Mode_Initialize@SPI_Inst+1)& (0+255),w,b
  1280   001402  A4D8               	btfss	status,2,c
  1281   001404  EF06  F00A         	goto	u4681
  1282   001408  EF08  F00A         	goto	u4680
  1283   00140C                     u4681:
  1284   00140C  EF0A  F00A         	goto	l1945
  1285   001410                     u4680:
  1286   001410                     
  1287                           ; BSR set to: 0
  1288                           ;MCAL_Layer/SPI/hal_spi.c: 31:     }
  1289   001410  EFAF  F00A         	goto	l1953
  1290   001414                     l1945:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;MCAL_Layer/SPI/hal_spi.c: 34:         (SSPCON1bits.SSPEN = 0);
  1294   001414  9AC6               	bcf	198,5,c	;volatile
  1295   001416                     
  1296                           ; BSR set to: 0
  1297                           ;MCAL_Layer/SPI/hal_spi.c: 36:         SSPCON1bits.SSPM = SPI_Inst->spi_mode_select;
  1298   001416  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1299   00141A  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1300   00141E  50DF               	movf	indf2,w,c
  1301   001420  6FE4               	movwf	??_MSSP_SPI_Mode_Initialize& (0+255),b
  1302   001422  50C6               	movf	198,w,c	;volatile
  1303   001424  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1304   001426  0BF0               	andlw	-16
  1305   001428  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1306   00142A  6EC6               	movwf	198,c	;volatile
  1307   00142C                     
  1308                           ; BSR set to: 0
  1309                           ;MCAL_Layer/SPI/hal_spi.c: 38:         if((SPI_Master_mode_clk_F_div_by_4 == SPI_Inst->s
      +                          pi_mode_select) ||
  1310   00142C  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1311   001430  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1312   001434  50DF               	movf	indf2,w,c
  1313   001436  B4D8               	btfsc	status,2,c
  1314   001438  EF20  F00A         	goto	u4691
  1315   00143C  EF22  F00A         	goto	u4690
  1316   001440                     u4691:
  1317   001440  EF48  F00A         	goto	l6128
  1318   001444                     u4690:
  1319   001444                     
  1320                           ; BSR set to: 0
  1321   001444  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1322   001448  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1323   00144C  04DE               	decf	postinc2,w,c
  1324   00144E  B4D8               	btfsc	status,2,c
  1325   001450  EF2C  F00A         	goto	u4701
  1326   001454  EF2E  F00A         	goto	u4700
  1327   001458                     u4701:
  1328   001458  EF48  F00A         	goto	l6128
  1329   00145C                     u4700:
  1330   00145C                     
  1331                           ; BSR set to: 0
  1332   00145C  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1333   001460  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1334   001464  0E02               	movlw	2
  1335   001466  18DE               	xorwf	postinc2,w,c
  1336   001468  B4D8               	btfsc	status,2,c
  1337   00146A  EF39  F00A         	goto	u4711
  1338   00146E  EF3B  F00A         	goto	u4710
  1339   001472                     u4711:
  1340   001472  EF48  F00A         	goto	l6128
  1341   001476                     u4710:
  1342   001476                     
  1343                           ; BSR set to: 0
  1344   001476  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1345   00147A  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1346   00147E  0E03               	movlw	3
  1347   001480  18DE               	xorwf	postinc2,w,c
  1348   001482  A4D8               	btfss	status,2,c
  1349   001484  EF46  F00A         	goto	u4721
  1350   001488  EF48  F00A         	goto	u4720
  1351   00148C                     u4721:
  1352   00148C  EF4E  F00A         	goto	l6130
  1353   001490                     u4720:
  1354   001490                     l6128:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;MCAL_Layer/SPI/hal_spi.c: 42:         {;MCAL_Layer/SPI/hal_spi.c: 43:             MSSP_
      +                          SPI_Master_Mode_GPIO_PIN_Configurations(SPI_Inst);
  1358   001490  C0E2  F070         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SP
      +                          I_Inst
  1359   001494  C0E3  F071         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@
      +                          SPI_Inst+1
  1360   001498  EC5C  F00D         	call	_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations	;wreg free
  1361   00149C                     l6130:
  1362                           
  1363                           ;MCAL_Layer/SPI/hal_spi.c: 45:         if((SPI_Slave_mode_clk_SCK_with_SS_Enabled == SPI
      +                          _Inst->spi_mode_select) ||
  1364   00149C  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1365   0014A0  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1366   0014A4  0E04               	movlw	4
  1367   0014A6  18DE               	xorwf	postinc2,w,c
  1368   0014A8  B4D8               	btfsc	status,2,c
  1369   0014AA  EF59  F00A         	goto	u4731
  1370   0014AE  EF5B  F00A         	goto	u4730
  1371   0014B2                     u4731:
  1372   0014B2  EF68  F00A         	goto	l6134
  1373   0014B6                     u4730:
  1374   0014B6  C0E2  FFD9         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,fsr2l
  1375   0014BA  C0E3  FFDA         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,fsr2h
  1376   0014BE  0E05               	movlw	5
  1377   0014C0  18DE               	xorwf	postinc2,w,c
  1378   0014C2  A4D8               	btfss	status,2,c
  1379   0014C4  EF66  F00A         	goto	u4741
  1380   0014C8  EF68  F00A         	goto	u4740
  1381   0014CC                     u4741:
  1382   0014CC  EF6E  F00A         	goto	l6136
  1383   0014D0                     u4740:
  1384   0014D0                     l6134:
  1385                           
  1386                           ;MCAL_Layer/SPI/hal_spi.c: 47:         {;MCAL_Layer/SPI/hal_spi.c: 48:             MSSP_
      +                          SPI_Slave_Mode_GPIO_PIN_Configurations(SPI_Inst);
  1387   0014D0  C0E2  F070         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst,MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI
      +                          _Inst
  1388   0014D4  C0E3  F071         	movff	MSSP_SPI_Mode_Initialize@SPI_Inst+1,MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@S
      +                          PI_Inst+1
  1389   0014D8  ECE6  F00C         	call	_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations	;wreg free
  1390   0014DC                     l6136:
  1391                           
  1392                           ;MCAL_Layer/SPI/hal_spi.c: 51:         SSPCON1bits.CKP = SPI_Inst->spi_config.ClockPolar
      +                          ity;
  1393   0014DC  0100               	movlb	0	; () banked
  1394   0014DE  EE20 F001          	lfsr	2,1
  1395   0014E2  51E2               	movf	MSSP_SPI_Mode_Initialize@SPI_Inst& (0+255),w,b
  1396   0014E4  26D9               	addwf	fsr2l,f,c
  1397   0014E6  51E3               	movf	(MSSP_SPI_Mode_Initialize@SPI_Inst+1)& (0+255),w,b
  1398   0014E8  22DA               	addwfc	fsr2h,f,c
  1399   0014EA  50DF               	movf	223,w,c
  1400   0014EC  0B03               	andlw	3
  1401   0014EE  6FE4               	movwf	??_MSSP_SPI_Mode_Initialize& (0+255),b
  1402   0014F0  3BE4               	swapf	??_MSSP_SPI_Mode_Initialize& (0+255),f,b
  1403   0014F2  50C6               	movf	198,w,c	;volatile
  1404   0014F4  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1405   0014F6  0BEF               	andlw	-17
  1406   0014F8  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1407   0014FA  6EC6               	movwf	198,c	;volatile
  1408   0014FC                     
  1409                           ; BSR set to: 0
  1410                           ;MCAL_Layer/SPI/hal_spi.c: 53:         SSPSTATbits.SMP = SPI_Inst->spi_config.SampleSele
      +                          ct;
  1411   0014FC  EE20 F001          	lfsr	2,1
  1412   001500  51E2               	movf	MSSP_SPI_Mode_Initialize@SPI_Inst& (0+255),w,b
  1413   001502  26D9               	addwf	fsr2l,f,c
  1414   001504  51E3               	movf	(MSSP_SPI_Mode_Initialize@SPI_Inst+1)& (0+255),w,b
  1415   001506  22DA               	addwfc	fsr2h,f,c
  1416   001508  30DF               	rrcf	223,w,c
  1417   00150A  32E8               	rrcf	wreg,f,c
  1418   00150C  0B03               	andlw	3
  1419   00150E  6FE4               	movwf	??_MSSP_SPI_Mode_Initialize& (0+255),b
  1420   001510  33E4               	rrcf	??_MSSP_SPI_Mode_Initialize& (0+255),f,b
  1421   001512  33E4               	rrcf	??_MSSP_SPI_Mode_Initialize& (0+255),f,b
  1422   001514  50C7               	movf	199,w,c	;volatile
  1423   001516  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1424   001518  0B7F               	andlw	-129
  1425   00151A  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1426   00151C  6EC7               	movwf	199,c	;volatile
  1427   00151E                     
  1428                           ; BSR set to: 0
  1429                           ;MCAL_Layer/SPI/hal_spi.c: 55:          SSPSTATbits.CKE = SPI_Inst->spi_config.ClockSele
      +                          ct;
  1430   00151E  EE20 F001          	lfsr	2,1
  1431   001522  51E2               	movf	MSSP_SPI_Mode_Initialize@SPI_Inst& (0+255),w,b
  1432   001524  26D9               	addwf	fsr2l,f,c
  1433   001526  51E3               	movf	(MSSP_SPI_Mode_Initialize@SPI_Inst+1)& (0+255),w,b
  1434   001528  22DA               	addwfc	fsr2h,f,c
  1435   00152A  38DF               	swapf	223,w,c
  1436   00152C  0B03               	andlw	3
  1437   00152E  6FE4               	movwf	??_MSSP_SPI_Mode_Initialize& (0+255),b
  1438   001530  3BE4               	swapf	??_MSSP_SPI_Mode_Initialize& (0+255),f,b
  1439   001532  47E4               	rlncf	??_MSSP_SPI_Mode_Initialize& (0+255),f,b
  1440   001534  47E4               	rlncf	??_MSSP_SPI_Mode_Initialize& (0+255),f,b
  1441   001536  50C7               	movf	199,w,c	;volatile
  1442   001538  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1443   00153A  0BBF               	andlw	-65
  1444   00153C  19E4               	xorwf	??_MSSP_SPI_Mode_Initialize& (0+255),w,b
  1445   00153E  6EC7               	movwf	199,c	;volatile
  1446   001540                     
  1447                           ; BSR set to: 0
  1448                           ;MCAL_Layer/SPI/hal_spi.c: 58:         (INTCONbits.GIE = 1);
  1449   001540  8EF2               	bsf	242,7,c	;volatile
  1450   001542                     
  1451                           ; BSR set to: 0
  1452                           ;MCAL_Layer/SPI/hal_spi.c: 59:         (INTCONbits.PEIE = 1);
  1453   001542  8CF2               	bsf	242,6,c	;volatile
  1454   001544                     
  1455                           ; BSR set to: 0
  1456                           ;MCAL_Layer/SPI/hal_spi.c: 60:         (PIE1bits.SSPIE = 1);
  1457   001544  869D               	bsf	157,3,c	;volatile
  1458   001546                     
  1459                           ; BSR set to: 0
  1460                           ;MCAL_Layer/SPI/hal_spi.c: 61:         (PIR1bits.SSPIF = 0);
  1461   001546  969E               	bcf	158,3,c	;volatile
  1462   001548                     
  1463                           ; BSR set to: 0
  1464                           ;MCAL_Layer/SPI/hal_spi.c: 73:         SPI_InterruptHandler = SPI_Inst->MSSP_SPI_Default
      +                          InterruptHandler;
  1465   001548  EE20 F002          	lfsr	2,2
  1466   00154C  51E2               	movf	MSSP_SPI_Mode_Initialize@SPI_Inst& (0+255),w,b
  1467   00154E  26D9               	addwf	fsr2l,f,c
  1468   001550  51E3               	movf	(MSSP_SPI_Mode_Initialize@SPI_Inst+1)& (0+255),w,b
  1469   001552  22DA               	addwfc	fsr2h,f,c
  1470   001554  CFDE F001          	movff	postinc2,_SPI_InterruptHandler
  1471   001558  CFDD F002          	movff	postdec2,_SPI_InterruptHandler+1
  1472   00155C                     
  1473                           ; BSR set to: 0
  1474                           ;MCAL_Layer/SPI/hal_spi.c: 76:         (SSPCON1bits.SSPEN = 1);
  1475   00155C  8AC6               	bsf	198,5,c	;volatile
  1476   00155E                     l1953:
  1477                           
  1478                           ; BSR set to: 0
  1479   00155E  0012               	return		;funcret
  1480   001560                     __end_of_MSSP_SPI_Mode_Initialize:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations *****************
  1484 ;; Defined at:
  1485 ;;		line 156 in file "MCAL_Layer/SPI/hal_spi.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  SPI_Inst        2   22[COMRAM] PTR const struct .
  1488 ;;		 -> spi_obj1_master(5), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  SPI_SS          1    4[BANK0 ] struct PIN_CONFIG
  1491 ;;  SPI_CLK         1    3[BANK0 ] struct PIN_CONFIG
  1492 ;;  SPI_SDI         1    2[BANK0 ] struct PIN_CONFIG
  1493 ;;  SPI_SDO         1    1[BANK0 ] struct PIN_CONFIG
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:        7 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 5
  1510 ;; This function calls:
  1511 ;;		_gpio_pin_direction_initialize
  1512 ;; This function is called by:
  1513 ;;		_MSSP_SPI_Mode_Initialize
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text5
  1518   0019CC                     __ptext5:
  1519                           	callstack 0
  1520   0019CC                     _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations:
  1521                           	callstack 23
  1522   0019CC                     
  1523                           ;MCAL_Layer/SPI/hal_spi.c: 156: static void MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations(
      +                          const SPI_t *SPI_Inst);MCAL_Layer/SPI/hal_spi.c: 157: {;MCAL_Layer/SPI/hal_spi.c: 158:  
      +                             pin_config_t SPI_SDO = {.port = PORTC_INDEX, .pin = GPIO_PIN5, .direction = GPIO_DIRE
      +                          CTION_OUTPUT};
  1524   0019CC  C04C  F0DE         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3164,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_SDO
  1525                           
  1526                           ;MCAL_Layer/SPI/hal_spi.c: 159:     pin_config_t SPI_SDI = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN4, .direction = GPIO_DIRECTION_INPUT};
  1527   0019D0  C04B  F0DF         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3166,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_SDI
  1528                           
  1529                           ;MCAL_Layer/SPI/hal_spi.c: 160:     pin_config_t SPI_CLK = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN3, .direction = GPIO_DIRECTION_INPUT};
  1530   0019D4  C04A  F0E0         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3168,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_CLK
  1531                           
  1532                           ;MCAL_Layer/SPI/hal_spi.c: 161:     pin_config_t SPI_SS = {.port = PORTA_INDEX, .pin = G
      +                          PIO_PIN5, .direction = GPIO_DIRECTION_INPUT};
  1533   0019D8  C049  F0E1         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3170,MSSP_SPI_Slave_Mode_GPIO_PIN_Co
      +                          nfigurations@SPI_SS
  1534   0019DC                     
  1535                           ;MCAL_Layer/SPI/hal_spi.c: 163:     gpio_pin_direction_initialize(&SPI_SDO);
  1536   0019DC  0EDE               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO
  1537   0019DE  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1538   0019E0  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO
  1539   0019E2  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1540   0019E4  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1541                           
  1542                           ;MCAL_Layer/SPI/hal_spi.c: 164:     gpio_pin_direction_initialize(&SPI_SDI);
  1543   0019E8  0EDF               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI
  1544   0019EA  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1545   0019EC  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI
  1546   0019EE  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1547   0019F0  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1548                           
  1549                           ;MCAL_Layer/SPI/hal_spi.c: 165:     gpio_pin_direction_initialize(&SPI_CLK);
  1550   0019F4  0EE0               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK
  1551   0019F6  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1552   0019F8  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK
  1553   0019FA  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1554   0019FC  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1555   001A00                     
  1556                           ;MCAL_Layer/SPI/hal_spi.c: 167:     if(SPI_Slave_mode_clk_SCK_with_SS_Enabled == SPI_Ins
      +                          t->spi_mode_select){
  1557   001A00  C070  FFD9         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_Inst,fsr2l
  1558   001A04  C071  FFDA         	movff	MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_Inst+1,fsr2h
  1559   001A08  0E04               	movlw	4
  1560   001A0A  18DE               	xorwf	postinc2,w,c
  1561   001A0C  A4D8               	btfss	status,2,c
  1562   001A0E  EF0B  F00D         	goto	u4581
  1563   001A12  EF0D  F00D         	goto	u4580
  1564   001A16                     u4581:
  1565   001A16  EF13  F00D         	goto	l2009
  1566   001A1A                     u4580:
  1567   001A1A                     
  1568                           ;MCAL_Layer/SPI/hal_spi.c: 168:         gpio_pin_direction_initialize(&SPI_SS);
  1569   001A1A  0EE1               	movlw	low MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS
  1570   001A1C  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1571   001A1E  0E00               	movlw	high MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS
  1572   001A20  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1573   001A22  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1574   001A26                     l2009:
  1575   001A26  0012               	return		;funcret
  1576   001A28                     __end_of_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _MSSP_SPI_Master_Mode_GPIO_PIN_Configurations *****************
  1580 ;; Defined at:
  1581 ;;		line 145 in file "MCAL_Layer/SPI/hal_spi.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  SPI_Inst        2   22[COMRAM] PTR const struct .
  1584 ;;		 -> spi_obj1_master(5), 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  SPI_CLK         1    2[BANK0 ] struct PIN_CONFIG
  1587 ;;  SPI_SDI         1    1[BANK0 ] struct PIN_CONFIG
  1588 ;;  SPI_SDO         1    0[BANK0 ] struct PIN_CONFIG
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;Total ram usage:        5 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 5
  1605 ;; This function calls:
  1606 ;;		_gpio_pin_direction_initialize
  1607 ;; This function is called by:
  1608 ;;		_MSSP_SPI_Mode_Initialize
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text6
  1613   001AB8                     __ptext6:
  1614                           	callstack 0
  1615   001AB8                     _MSSP_SPI_Master_Mode_GPIO_PIN_Configurations:
  1616                           	callstack 23
  1617   001AB8                     
  1618                           ;MCAL_Layer/SPI/hal_spi.c: 145: static void MSSP_SPI_Master_Mode_GPIO_PIN_Configurations
      +                          (const SPI_t *SPI_Inst);MCAL_Layer/SPI/hal_spi.c: 146: {;MCAL_Layer/SPI/hal_spi.c: 147: 
      +                              pin_config_t SPI_SDO = {.port = PORTC_INDEX, .pin = GPIO_PIN5, .direction = GPIO_DIR
      +                          ECTION_OUTPUT};
  1619   001AB8  C04F  F0DD         	movff	MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3156,MSSP_SPI_Master_Mode_GPIO_PIN_
      +                          Configurations@SPI_SDO
  1620                           
  1621                           ;MCAL_Layer/SPI/hal_spi.c: 148:     pin_config_t SPI_SDI = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN4, .direction = GPIO_DIRECTION_INPUT};
  1622   001ABC  C04E  F0DE         	movff	MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3158,MSSP_SPI_Master_Mode_GPIO_PIN_
      +                          Configurations@SPI_SDI
  1623                           
  1624                           ;MCAL_Layer/SPI/hal_spi.c: 149:     pin_config_t SPI_CLK = {.port = PORTC_INDEX, .pin = 
      +                          GPIO_PIN3, .direction = GPIO_DIRECTION_OUTPUT};
  1625   001AC0  C04D  F0DF         	movff	MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3160,MSSP_SPI_Master_Mode_GPIO_PIN_
      +                          Configurations@SPI_CLK
  1626   001AC4                     
  1627                           ;MCAL_Layer/SPI/hal_spi.c: 151:     gpio_pin_direction_initialize(&SPI_SDO);
  1628   001AC4  0EDD               	movlw	low MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO
  1629   001AC6  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1630   001AC8  0E00               	movlw	high MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO
  1631   001ACA  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1632   001ACC  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1633                           
  1634                           ;MCAL_Layer/SPI/hal_spi.c: 152:     gpio_pin_direction_initialize(&SPI_SDI);
  1635   001AD0  0EDE               	movlw	low MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI
  1636   001AD2  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1637   001AD4  0E00               	movlw	high MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI
  1638   001AD6  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1639   001AD8  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1640                           
  1641                           ;MCAL_Layer/SPI/hal_spi.c: 153:     gpio_pin_direction_initialize(&SPI_CLK);
  1642   001ADC  0EDF               	movlw	low MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK
  1643   001ADE  6E67               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
  1644   001AE0  0E00               	movlw	high MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK
  1645   001AE2  6E68               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
  1646   001AE4  ECB0  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  1647   001AE8  0012               	return		;funcret
  1648   001AEA                     __end_of_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _gpio_pin_direction_initialize *****************
  1652 ;; Defined at:
  1653 ;;		line 14 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  _pin_config     2   13[COMRAM] PTR const struct PIN_CON
  1656 ;;		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(1), M
      +SSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(1), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(1), 
  1657 ;;		 -> MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK(1), MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI(1)
      +, MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO(1), led3(1), 
  1658 ;;		 -> led2(1), led1(1), 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  ret             1   21[COMRAM] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      unsigned char 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;Total ram usage:        9 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 4
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_gpio_pin_initialize
  1681 ;;		_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations
  1682 ;;		_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
  1683 ;;		_DC_MOTOR_PINS_INITIALIZE
  1684 ;;		_keypad_initialize
  1685 ;;		_Interrupt_RBx_Init
  1686 ;;		_Interrupt_INTx_Pin_Init
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text7
  1691   001560                     __ptext7:
  1692                           	callstack 0
  1693   001560                     _gpio_pin_direction_initialize:
  1694                           	callstack 24
  1695   001560                     
  1696                           ;MCAL_Layer/GPIO/hal_gpio.c: 14: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t * _pin_config);MCAL_Layer/GPIO/hal_gpio.c: 15: {;MCAL_Layer/GPIO/hal_gpio.c: 16
      +                          :     Std_ReturnType ret = (Std_ReturnType)0x01;
  1697   001560  0E01               	movlw	1
  1698   001562  6E6F               	movwf	gpio_pin_direction_initialize@ret^0,c
  1699   001564                     
  1700                           ;MCAL_Layer/GPIO/hal_gpio.c: 17:     if(_pin_config==((void*)0) || _pin_config->pin > (8
      +                           - 1) )
  1701   001564  5067               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
  1702   001566  1068               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
  1703   001568  B4D8               	btfsc	status,2,c
  1704   00156A  EFB9  F00A         	goto	u4481
  1705   00156E  EFBB  F00A         	goto	u4480
  1706   001572                     u4481:
  1707   001572  EFCC  F00A         	goto	l5972
  1708   001576                     u4480:
  1709   001576  C067  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1710   00157A  C068  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1711   00157E  30DF               	rrcf	223,w,c
  1712   001580  32E8               	rrcf	wreg,f,c
  1713   001582  32E8               	rrcf	wreg,f,c
  1714   001584  0B07               	andlw	7
  1715   001586  6E69               	movwf	??_gpio_pin_direction_initialize^0,c
  1716   001588  0E07               	movlw	7
  1717   00158A  6469               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1718   00158C  EFCA  F00A         	goto	u4491
  1719   001590  EFCC  F00A         	goto	u4490
  1720   001594                     u4491:
  1721   001594  EF2F  F00B         	goto	l5980
  1722   001598                     u4490:
  1723   001598                     l5972:
  1724                           
  1725                           ;MCAL_Layer/GPIO/hal_gpio.c: 18:     {;MCAL_Layer/GPIO/hal_gpio.c: 19:         ret = (St
      +                          d_ReturnType)0x00;
  1726   001598  0E00               	movlw	0
  1727   00159A  6E6F               	movwf	gpio_pin_direction_initialize@ret^0,c
  1728                           
  1729                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     }
  1730   00159C  EF50  F00B         	goto	l5982
  1731   0015A0                     l5974:
  1732                           
  1733                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:                     (*tris_registers[_pin_config->port]
      +                          &=~((uint8)1<<_pin_config->pin));
  1734   0015A0  C067  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1735   0015A4  C068  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1736   0015A8  30DF               	rrcf	223,w,c
  1737   0015AA  32E8               	rrcf	wreg,f,c
  1738   0015AC  32E8               	rrcf	wreg,f,c
  1739   0015AE  0B07               	andlw	7
  1740   0015B0  6E69               	movwf	??_gpio_pin_direction_initialize^0,c
  1741   0015B2  0E01               	movlw	1
  1742   0015B4  6E6A               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1743   0015B6  2A69               	incf	??_gpio_pin_direction_initialize^0,f,c
  1744   0015B8  EFE0  F00A         	goto	u4504
  1745   0015BC                     u4505:
  1746   0015BC  90D8               	bcf	status,0,c
  1747   0015BE  366A               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1748   0015C0                     u4504:
  1749   0015C0  2E69               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1750   0015C2  EFDE  F00A         	goto	u4505
  1751   0015C6  506A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1752   0015C8  0AFF               	xorlw	255
  1753   0015CA  6E6B               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1754   0015CC  C067  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1755   0015D0  C068  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1756   0015D4  50DF               	movf	223,w,c
  1757   0015D6  0B07               	andlw	7
  1758   0015D8  6E6C               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1759   0015DA  506C               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1760   0015DC  0D02               	mullw	2
  1761   0015DE  0EB6               	movlw	low _tris_registers
  1762   0015E0  24F3               	addwf	243,w,c
  1763   0015E2  6ED9               	movwf	fsr2l,c
  1764   0015E4  0E00               	movlw	high _tris_registers
  1765   0015E6  20F4               	addwfc	prodh,w,c
  1766   0015E8  6EDA               	movwf	fsr2h,c
  1767   0015EA  CFDE F06D          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1768   0015EE  CFDD F06E          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1769   0015F2  C06D  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1770   0015F6  C06E  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1771   0015FA  506B               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1772   0015FC  16DF               	andwf	indf2,f,c
  1773                           
  1774                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:                     break;
  1775   0015FE  EF50  F00B         	goto	l5982
  1776   001602                     l5976:
  1777                           
  1778                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:                     (*tris_registers[_pin_config->port]
      +                          |=((uint8)1<<_pin_config->pin));
  1779   001602  C067  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1780   001606  C068  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1781   00160A  30DF               	rrcf	223,w,c
  1782   00160C  32E8               	rrcf	wreg,f,c
  1783   00160E  32E8               	rrcf	wreg,f,c
  1784   001610  0B07               	andlw	7
  1785   001612  6E69               	movwf	??_gpio_pin_direction_initialize^0,c
  1786   001614  0E01               	movlw	1
  1787   001616  6E6A               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1788   001618  2A69               	incf	??_gpio_pin_direction_initialize^0,f,c
  1789   00161A  EF11  F00B         	goto	u4514
  1790   00161E                     u4515:
  1791   00161E  90D8               	bcf	status,0,c
  1792   001620  366A               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1793   001622                     u4514:
  1794   001622  2E69               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1795   001624  EF0F  F00B         	goto	u4515
  1796   001628  C067  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1797   00162C  C068  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1798   001630  50DF               	movf	223,w,c
  1799   001632  0B07               	andlw	7
  1800   001634  6E6B               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1801   001636  506B               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1802   001638  0D02               	mullw	2
  1803   00163A  0EB6               	movlw	low _tris_registers
  1804   00163C  24F3               	addwf	243,w,c
  1805   00163E  6ED9               	movwf	fsr2l,c
  1806   001640  0E00               	movlw	high _tris_registers
  1807   001642  20F4               	addwfc	prodh,w,c
  1808   001644  6EDA               	movwf	fsr2h,c
  1809   001646  CFDE F06C          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1810   00164A  CFDD F06D          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1811   00164E  C06C  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1812   001652  C06D  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1813   001656  506A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1814   001658  12DF               	iorwf	indf2,f,c
  1815                           
  1816                           ;MCAL_Layer/GPIO/hal_gpio.c: 29:                     break;
  1817   00165A  EF50  F00B         	goto	l5982
  1818   00165E                     l5980:
  1819   00165E  C067  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
  1820   001662  C068  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
  1821   001666  BEDF               	btfsc	indf2,7,c
  1822   001668  EF38  F00B         	goto	u4521
  1823   00166C  EF3B  F00B         	goto	u4520
  1824   001670                     u4521:
  1825   001670  0E01               	movlw	1
  1826   001672  EF3C  F00B         	goto	u4530
  1827   001676                     u4520:
  1828   001676  0E00               	movlw	0
  1829   001678                     u4530:
  1830   001678  6E69               	movwf	??_gpio_pin_direction_initialize^0,c
  1831   00167A  6A6A               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1832                           
  1833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1834                           ; Switch size 1, requested type "simple"
  1835                           ; Number of cases is 1, Range of values is 0 to 0
  1836                           ; switch strategies available:
  1837                           ; Name         Instructions Cycles
  1838                           ; simple_byte            4     3 (average)
  1839                           ;	Chosen strategy is simple_byte
  1840   00167C  506A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1841   00167E  0A00               	xorlw	0	; case 0
  1842   001680  B4D8               	btfsc	status,2,c
  1843   001682  EF45  F00B         	goto	l6742
  1844   001686  EFCC  F00A         	goto	l5972
  1845   00168A                     l6742:
  1846                           
  1847                           ; Switch size 1, requested type "simple"
  1848                           ; Number of cases is 2, Range of values is 0 to 1
  1849                           ; switch strategies available:
  1850                           ; Name         Instructions Cycles
  1851                           ; simple_byte            7     4 (average)
  1852                           ;	Chosen strategy is simple_byte
  1853   00168A  5069               	movf	??_gpio_pin_direction_initialize^0,w,c
  1854   00168C  0A00               	xorlw	0	; case 0
  1855   00168E  B4D8               	btfsc	status,2,c
  1856   001690  EFD0  F00A         	goto	l5974
  1857   001694  0A01               	xorlw	1	; case 1
  1858   001696  B4D8               	btfsc	status,2,c
  1859   001698  EF01  F00B         	goto	l5976
  1860   00169C  EFCC  F00A         	goto	l5972
  1861   0016A0                     l5982:
  1862                           
  1863                           ;MCAL_Layer/GPIO/hal_gpio.c: 37:     return ret;
  1864   0016A0  506F               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1865   0016A2  0012               	return		;funcret
  1866   0016A4                     __end_of_gpio_pin_direction_initialize:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _SPI_Send_Byte *****************
  1870 ;; Defined at:
  1871 ;;		line 95 in file "MCAL_Layer/SPI/hal_spi.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  SPI_Inst        2   13[COMRAM] PTR const struct .
  1874 ;;		 -> spi_obj1_master(5), 
  1875 ;;  _data           1   15[COMRAM] const unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  ret             1    0        unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 4
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text8
  1902   001B18                     __ptext8:
  1903                           	callstack 0
  1904   001B18                     _SPI_Send_Byte:
  1905                           	callstack 26
  1906   001B18                     
  1907                           ;MCAL_Layer/SPI/hal_spi.c: 98:     if(((void*)0) == SPI_Inst){
  1908   001B18  5067               	movf	SPI_Send_Byte@SPI_Inst^0,w,c
  1909   001B1A  1068               	iorwf	(SPI_Send_Byte@SPI_Inst+1)^0,w,c
  1910   001B1C  A4D8               	btfss	status,2,c
  1911   001B1E  EF93  F00D         	goto	u3351
  1912   001B22  EF95  F00D         	goto	u3350
  1913   001B26                     u3351:
  1914   001B26  EF97  F00D         	goto	l1961
  1915   001B2A                     u3350:
  1916   001B2A                     
  1917                           ;MCAL_Layer/SPI/hal_spi.c: 100:     }
  1918   001B2A  EFA1  F00D         	goto	l1966
  1919   001B2E                     l1961:
  1920                           
  1921                           ;MCAL_Layer/SPI/hal_spi.c: 102:         SSPBUF = _data;
  1922   001B2E  C069  FFC9         	movff	SPI_Send_Byte@_data,4041	;volatile
  1923   001B32                     l1963:
  1924   001B32  A69E               	btfss	158,3,c	;volatile
  1925   001B34  EF9E  F00D         	goto	u3361
  1926   001B38  EFA0  F00D         	goto	u3360
  1927   001B3C                     u3361:
  1928   001B3C  EF99  F00D         	goto	l1963
  1929   001B40                     u3360:
  1930   001B40                     
  1931                           ;MCAL_Layer/SPI/hal_spi.c: 104:         PIR1bits.SSPIF = 0;
  1932   001B40  969E               	bcf	158,3,c	;volatile
  1933   001B42                     l1966:
  1934   001B42  0012               	return		;funcret
  1935   001B44                     __end_of_SPI_Send_Byte:
  1936                           	callstack 0
  1937                           
  1938 ;; *************** function _InterruptManager *****************
  1939 ;; Defined at:
  1940 ;;		line 31 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;Total ram usage:        6 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 3
  1961 ;; This function calls:
  1962 ;;		_ADC_ISR
  1963 ;;		_CCP1_ISR
  1964 ;;		_CCP2_ISR
  1965 ;;		_EUSART_RX_ISR
  1966 ;;		_EUSART_TX_ISR
  1967 ;;		_INT0_ISR
  1968 ;;		_INT1_ISR
  1969 ;;		_INT2_ISR
  1970 ;;		_MSSP_SPI_ISR
  1971 ;;		_RB4_ISR
  1972 ;;		_RB5_ISR
  1973 ;;		_RB6_ISR
  1974 ;;		_RB7_ISR
  1975 ;;		_TMR0_ISR
  1976 ;;		_TMR1_ISR
  1977 ;;		_TMR2_ISR
  1978 ;;		_TMR3_ISR
  1979 ;; This function is called by:
  1980 ;;		Interrupt level 2
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	intcode
  1985   000008                     __pintcode:
  1986                           	callstack 0
  1987   000008                     _InterruptManager:
  1988                           	callstack 23
  1989                           
  1990                           ;incstack = 0
  1991   000008  8272               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1992   00000A  ED03  F008         	call	int_func,f	;refresh shadow registers
  1993                           
  1994                           	psect	intcode_body
  1995   001006                     __pintcode_body:
  1996                           	callstack 23
  1997   001006                     int_func:
  1998                           	callstack 23
  1999   001006  0006               	pop		; remove dummy address from shadow register refresh
  2000   001008  CFFA F061          	movff	pclath,??_InterruptManager
  2001   00100C  CFFB F062          	movff	pclatu,??_InterruptManager+1
  2002   001010  CFD9 F063          	movff	fsr2l,??_InterruptManager+2
  2003   001014  CFDA F064          	movff	fsr2h,??_InterruptManager+3
  2004   001018  CFF3 F065          	movff	prodl,??_InterruptManager+4
  2005   00101C  CFF4 F066          	movff	prodh,??_InterruptManager+5
  2006   001020                     
  2007                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:     if((1 == INTCONbits.INT0IE) && (
      +                          1 == INTCONbits.INT0IF)){
  2008   001020  A8F2               	btfss	242,4,c	;volatile
  2009   001022  EF15  F008         	goto	i2u390_41
  2010   001026  EF17  F008         	goto	i2u390_40
  2011   00102A                     i2u390_41:
  2012   00102A  EF20  F008         	goto	i2l1251
  2013   00102E                     i2u390_40:
  2014   00102E  A2F2               	btfss	242,1,c	;volatile
  2015   001030  EF1C  F008         	goto	i2u391_41
  2016   001034  EF1E  F008         	goto	i2u391_40
  2017   001038                     i2u391_41:
  2018   001038  EF20  F008         	goto	i2l1251
  2019   00103C                     i2u391_40:
  2020   00103C                     
  2021                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 34:         INT0_ISR();
  2022   00103C  EC08  F00E         	call	_INT0_ISR	;wreg free
  2023   001040                     i2l1251:
  2024                           
  2025                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 37:     if((1 == INTCON3bits.INT1E) && (
      +                          1 == INTCON3bits.INT1F)){
  2026   001040  A6F0               	btfss	240,3,c	;volatile
  2027   001042  EF25  F008         	goto	i2u392_41
  2028   001046  EF27  F008         	goto	i2u392_40
  2029   00104A                     i2u392_41:
  2030   00104A  EF30  F008         	goto	i2l1253
  2031   00104E                     i2u392_40:
  2032   00104E  A0F0               	btfss	240,0,c	;volatile
  2033   001050  EF2C  F008         	goto	i2u393_41
  2034   001054  EF2E  F008         	goto	i2u393_40
  2035   001058                     i2u393_41:
  2036   001058  EF30  F008         	goto	i2l1253
  2037   00105C                     i2u393_40:
  2038   00105C                     
  2039                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 38:         INT1_ISR();
  2040   00105C  EC06  F00E         	call	_INT1_ISR	;wreg free
  2041   001060                     i2l1253:
  2042                           
  2043                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 41:     if((1 == INTCON3bits.INT2IE) && 
      +                          (1 == INTCON3bits.INT2IF)){
  2044   001060  A8F0               	btfss	240,4,c	;volatile
  2045   001062  EF35  F008         	goto	i2u394_41
  2046   001066  EF37  F008         	goto	i2u394_40
  2047   00106A                     i2u394_41:
  2048   00106A  EF40  F008         	goto	i2l1255
  2049   00106E                     i2u394_40:
  2050   00106E  A2F0               	btfss	240,1,c	;volatile
  2051   001070  EF3C  F008         	goto	i2u395_41
  2052   001074  EF3E  F008         	goto	i2u395_40
  2053   001078                     i2u395_41:
  2054   001078  EF40  F008         	goto	i2l1255
  2055   00107C                     i2u395_40:
  2056   00107C                     
  2057                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42:         INT2_ISR();
  2058   00107C  EC04  F00E         	call	_INT2_ISR	;wreg free
  2059   001080                     i2l1255:
  2060                           
  2061                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 48:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2062   001080  A6F2               	btfss	242,3,c	;volatile
  2063   001082  EF45  F008         	goto	i2u396_41
  2064   001086  EF47  F008         	goto	i2u396_40
  2065   00108A                     i2u396_41:
  2066   00108A  EF62  F008         	goto	i2l1257
  2067   00108E                     i2u396_40:
  2068   00108E  A0F2               	btfss	242,0,c	;volatile
  2069   001090  EF4C  F008         	goto	i2u397_41
  2070   001094  EF4E  F008         	goto	i2u397_40
  2071   001098                     i2u397_41:
  2072   001098  EF62  F008         	goto	i2l1257
  2073   00109C                     i2u397_40:
  2074   00109C  A881               	btfss	129,4,c	;volatile
  2075   00109E  EF53  F008         	goto	i2u398_41
  2076   0010A2  EF55  F008         	goto	i2u398_40
  2077   0010A6                     i2u398_41:
  2078   0010A6  EF62  F008         	goto	i2l1257
  2079   0010AA                     i2u398_40:
  2080   0010AA  0455               	decf	_RB4_Flag^0,w,c	;volatile
  2081   0010AC  A4D8               	btfss	status,2,c
  2082   0010AE  EF5B  F008         	goto	i2u399_41
  2083   0010B2  EF5D  F008         	goto	i2u399_40
  2084   0010B6                     i2u399_41:
  2085   0010B6  EF62  F008         	goto	i2l1257
  2086   0010BA                     i2u399_40:
  2087   0010BA                     
  2088                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:        (PORTBbits.RB4 == GPIO_HIGH) 
      +                          && (RB4_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 50:         RB4_Flag
      +                           = 0;
  2089   0010BA  0E00               	movlw	0
  2090   0010BC  6E55               	movwf	_RB4_Flag^0,c	;volatile
  2091   0010BE                     
  2092                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51:         RB4_ISR(0);
  2093   0010BE  0E00               	movlw	0
  2094   0010C0  ECD9  F00D         	call	_RB4_ISR
  2095   0010C4                     i2l1257:
  2096                           
  2097                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 54:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2098   0010C4  A6F2               	btfss	242,3,c	;volatile
  2099   0010C6  EF67  F008         	goto	i2u400_41
  2100   0010CA  EF69  F008         	goto	i2u400_40
  2101   0010CE                     i2u400_41:
  2102   0010CE  EF84  F008         	goto	i2l1259
  2103   0010D2                     i2u400_40:
  2104   0010D2  A0F2               	btfss	242,0,c	;volatile
  2105   0010D4  EF6E  F008         	goto	i2u401_41
  2106   0010D8  EF70  F008         	goto	i2u401_40
  2107   0010DC                     i2u401_41:
  2108   0010DC  EF84  F008         	goto	i2l1259
  2109   0010E0                     i2u401_40:
  2110   0010E0  B881               	btfsc	129,4,c	;volatile
  2111   0010E2  EF75  F008         	goto	i2u402_41
  2112   0010E6  EF77  F008         	goto	i2u402_40
  2113   0010EA                     i2u402_41:
  2114   0010EA  EF84  F008         	goto	i2l1259
  2115   0010EE                     i2u402_40:
  2116   0010EE  5055               	movf	_RB4_Flag^0,w,c	;volatile
  2117   0010F0  A4D8               	btfss	status,2,c
  2118   0010F2  EF7D  F008         	goto	i2u403_41
  2119   0010F6  EF7F  F008         	goto	i2u403_40
  2120   0010FA                     i2u403_41:
  2121   0010FA  EF84  F008         	goto	i2l1259
  2122   0010FE                     i2u403_40:
  2123   0010FE                     
  2124                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55:        (PORTBbits.RB4 == GPIO_LOW) &
      +                          & (RB4_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:         RB4_Flag 
      +                          = 1;
  2125   0010FE  0E01               	movlw	1
  2126   001100  6E55               	movwf	_RB4_Flag^0,c	;volatile
  2127   001102                     
  2128                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         RB4_ISR(1);
  2129   001102  0E01               	movlw	1
  2130   001104  ECD9  F00D         	call	_RB4_ISR
  2131   001108                     i2l1259:
  2132                           
  2133                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2134   001108  A6F2               	btfss	242,3,c	;volatile
  2135   00110A  EF89  F008         	goto	i2u404_41
  2136   00110E  EF8B  F008         	goto	i2u404_40
  2137   001112                     i2u404_41:
  2138   001112  EFA6  F008         	goto	i2l1261
  2139   001116                     i2u404_40:
  2140   001116  A0F2               	btfss	242,0,c	;volatile
  2141   001118  EF90  F008         	goto	i2u405_41
  2142   00111C  EF92  F008         	goto	i2u405_40
  2143   001120                     i2u405_41:
  2144   001120  EFA6  F008         	goto	i2l1261
  2145   001124                     i2u405_40:
  2146   001124  AA81               	btfss	129,5,c	;volatile
  2147   001126  EF97  F008         	goto	i2u406_41
  2148   00112A  EF99  F008         	goto	i2u406_40
  2149   00112E                     i2u406_41:
  2150   00112E  EFA6  F008         	goto	i2l1261
  2151   001132                     i2u406_40:
  2152   001132  0454               	decf	_RB5_Flag^0,w,c	;volatile
  2153   001134  A4D8               	btfss	status,2,c
  2154   001136  EF9F  F008         	goto	i2u407_41
  2155   00113A  EFA1  F008         	goto	i2u407_40
  2156   00113E                     i2u407_41:
  2157   00113E  EFA6  F008         	goto	i2l1261
  2158   001142                     i2u407_40:
  2159   001142                     
  2160                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:        (PORTBbits.RB5 == GPIO_HIGH) 
      +                          && (RB5_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62:         RB5_Flag
      +                           = 0;
  2161   001142  0E00               	movlw	0
  2162   001144  6E54               	movwf	_RB5_Flag^0,c	;volatile
  2163   001146                     
  2164                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 63:         RB5_ISR(0);
  2165   001146  0E00               	movlw	0
  2166   001148  ECCC  F00D         	call	_RB5_ISR
  2167   00114C                     i2l1261:
  2168                           
  2169                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2170   00114C  A6F2               	btfss	242,3,c	;volatile
  2171   00114E  EFAB  F008         	goto	i2u408_41
  2172   001152  EFAD  F008         	goto	i2u408_40
  2173   001156                     i2u408_41:
  2174   001156  EFC8  F008         	goto	i2l1263
  2175   00115A                     i2u408_40:
  2176   00115A  A0F2               	btfss	242,0,c	;volatile
  2177   00115C  EFB2  F008         	goto	i2u409_41
  2178   001160  EFB4  F008         	goto	i2u409_40
  2179   001164                     i2u409_41:
  2180   001164  EFC8  F008         	goto	i2l1263
  2181   001168                     i2u409_40:
  2182   001168  BA81               	btfsc	129,5,c	;volatile
  2183   00116A  EFB9  F008         	goto	i2u410_41
  2184   00116E  EFBB  F008         	goto	i2u410_40
  2185   001172                     i2u410_41:
  2186   001172  EFC8  F008         	goto	i2l1263
  2187   001176                     i2u410_40:
  2188   001176  5054               	movf	_RB5_Flag^0,w,c	;volatile
  2189   001178  A4D8               	btfss	status,2,c
  2190   00117A  EFC1  F008         	goto	i2u411_41
  2191   00117E  EFC3  F008         	goto	i2u411_40
  2192   001182                     i2u411_41:
  2193   001182  EFC8  F008         	goto	i2l1263
  2194   001186                     i2u411_40:
  2195   001186                     
  2196                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:        (PORTBbits.RB5 == GPIO_LOW) &
      +                          & (RB5_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 68:         RB5_Flag 
      +                          = 1;
  2197   001186  0E01               	movlw	1
  2198   001188  6E54               	movwf	_RB5_Flag^0,c	;volatile
  2199   00118A                     
  2200                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 69:         RB5_ISR(1);
  2201   00118A  0E01               	movlw	1
  2202   00118C  ECCC  F00D         	call	_RB5_ISR
  2203   001190                     i2l1263:
  2204                           
  2205                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 72:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2206   001190  A6F2               	btfss	242,3,c	;volatile
  2207   001192  EFCD  F008         	goto	i2u412_41
  2208   001196  EFCF  F008         	goto	i2u412_40
  2209   00119A                     i2u412_41:
  2210   00119A  EFEA  F008         	goto	i2l1265
  2211   00119E                     i2u412_40:
  2212   00119E  A0F2               	btfss	242,0,c	;volatile
  2213   0011A0  EFD4  F008         	goto	i2u413_41
  2214   0011A4  EFD6  F008         	goto	i2u413_40
  2215   0011A8                     i2u413_41:
  2216   0011A8  EFEA  F008         	goto	i2l1265
  2217   0011AC                     i2u413_40:
  2218   0011AC  AC81               	btfss	129,6,c	;volatile
  2219   0011AE  EFDB  F008         	goto	i2u414_41
  2220   0011B2  EFDD  F008         	goto	i2u414_40
  2221   0011B6                     i2u414_41:
  2222   0011B6  EFEA  F008         	goto	i2l1265
  2223   0011BA                     i2u414_40:
  2224   0011BA  0453               	decf	_RB6_Flag^0,w,c	;volatile
  2225   0011BC  A4D8               	btfss	status,2,c
  2226   0011BE  EFE3  F008         	goto	i2u415_41
  2227   0011C2  EFE5  F008         	goto	i2u415_40
  2228   0011C6                     i2u415_41:
  2229   0011C6  EFEA  F008         	goto	i2l1265
  2230   0011CA                     i2u415_40:
  2231   0011CA                     
  2232                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 73:        (PORTBbits.RB6 == GPIO_HIGH) 
      +                          && (RB6_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:         RB6_Flag
      +                           = 0;
  2233   0011CA  0E00               	movlw	0
  2234   0011CC  6E53               	movwf	_RB6_Flag^0,c	;volatile
  2235   0011CE                     
  2236                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB6_ISR(0);
  2237   0011CE  0E00               	movlw	0
  2238   0011D0  ECBF  F00D         	call	_RB6_ISR
  2239   0011D4                     i2l1265:
  2240                           
  2241                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 78:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2242   0011D4  A6F2               	btfss	242,3,c	;volatile
  2243   0011D6  EFEF  F008         	goto	i2u416_41
  2244   0011DA  EFF1  F008         	goto	i2u416_40
  2245   0011DE                     i2u416_41:
  2246   0011DE  EF0C  F009         	goto	i2l1267
  2247   0011E2                     i2u416_40:
  2248   0011E2  A0F2               	btfss	242,0,c	;volatile
  2249   0011E4  EFF6  F008         	goto	i2u417_41
  2250   0011E8  EFF8  F008         	goto	i2u417_40
  2251   0011EC                     i2u417_41:
  2252   0011EC  EF0C  F009         	goto	i2l1267
  2253   0011F0                     i2u417_40:
  2254   0011F0  BC81               	btfsc	129,6,c	;volatile
  2255   0011F2  EFFD  F008         	goto	i2u418_41
  2256   0011F6  EFFF  F008         	goto	i2u418_40
  2257   0011FA                     i2u418_41:
  2258   0011FA  EF0C  F009         	goto	i2l1267
  2259   0011FE                     i2u418_40:
  2260   0011FE  5053               	movf	_RB6_Flag^0,w,c	;volatile
  2261   001200  A4D8               	btfss	status,2,c
  2262   001202  EF05  F009         	goto	i2u419_41
  2263   001206  EF07  F009         	goto	i2u419_40
  2264   00120A                     i2u419_41:
  2265   00120A  EF0C  F009         	goto	i2l1267
  2266   00120E                     i2u419_40:
  2267   00120E                     
  2268                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:        (PORTBbits.RB6 == GPIO_LOW) &
      +                          & (RB6_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:         RB6_Flag 
      +                          = 1;
  2269   00120E  0E01               	movlw	1
  2270   001210  6E53               	movwf	_RB6_Flag^0,c	;volatile
  2271   001212                     
  2272                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB6_ISR(1);
  2273   001212  0E01               	movlw	1
  2274   001214  ECBF  F00D         	call	_RB6_ISR
  2275   001218                     i2l1267:
  2276                           
  2277                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2278   001218  A6F2               	btfss	242,3,c	;volatile
  2279   00121A  EF11  F009         	goto	i2u420_41
  2280   00121E  EF13  F009         	goto	i2u420_40
  2281   001222                     i2u420_41:
  2282   001222  EF2E  F009         	goto	i2l1269
  2283   001226                     i2u420_40:
  2284   001226  A0F2               	btfss	242,0,c	;volatile
  2285   001228  EF18  F009         	goto	i2u421_41
  2286   00122C  EF1A  F009         	goto	i2u421_40
  2287   001230                     i2u421_41:
  2288   001230  EF2E  F009         	goto	i2l1269
  2289   001234                     i2u421_40:
  2290   001234  AE81               	btfss	129,7,c	;volatile
  2291   001236  EF1F  F009         	goto	i2u422_41
  2292   00123A  EF21  F009         	goto	i2u422_40
  2293   00123E                     i2u422_41:
  2294   00123E  EF2E  F009         	goto	i2l1269
  2295   001242                     i2u422_40:
  2296   001242  0452               	decf	_RB7_Flag^0,w,c	;volatile
  2297   001244  A4D8               	btfss	status,2,c
  2298   001246  EF27  F009         	goto	i2u423_41
  2299   00124A  EF29  F009         	goto	i2u423_40
  2300   00124E                     i2u423_41:
  2301   00124E  EF2E  F009         	goto	i2l1269
  2302   001252                     i2u423_40:
  2303   001252                     
  2304                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:        (PORTBbits.RB7 == GPIO_HIGH) 
      +                          && (RB7_Flag == 1)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:         RB7_Flag
      +                           = 0;
  2305   001252  0E00               	movlw	0
  2306   001254  6E52               	movwf	_RB7_Flag^0,c	;volatile
  2307   001256                     
  2308                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 87:         RB7_ISR(0);
  2309   001256  0E00               	movlw	0
  2310   001258  ECB2  F00D         	call	_RB7_ISR
  2311   00125C                     i2l1269:
  2312                           
  2313                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:     if((1 == INTCONbits.RBIE) && (1 
      +                          == INTCONbits.RBIF) &&
  2314   00125C  A6F2               	btfss	242,3,c	;volatile
  2315   00125E  EF33  F009         	goto	i2u424_41
  2316   001262  EF35  F009         	goto	i2u424_40
  2317   001266                     i2u424_41:
  2318   001266  EF50  F009         	goto	i2l1271
  2319   00126A                     i2u424_40:
  2320   00126A  A0F2               	btfss	242,0,c	;volatile
  2321   00126C  EF3A  F009         	goto	i2u425_41
  2322   001270  EF3C  F009         	goto	i2u425_40
  2323   001274                     i2u425_41:
  2324   001274  EF50  F009         	goto	i2l1271
  2325   001278                     i2u425_40:
  2326   001278  BE81               	btfsc	129,7,c	;volatile
  2327   00127A  EF41  F009         	goto	i2u426_41
  2328   00127E  EF43  F009         	goto	i2u426_40
  2329   001282                     i2u426_41:
  2330   001282  EF50  F009         	goto	i2l1271
  2331   001286                     i2u426_40:
  2332   001286  5052               	movf	_RB7_Flag^0,w,c	;volatile
  2333   001288  A4D8               	btfss	status,2,c
  2334   00128A  EF49  F009         	goto	i2u427_41
  2335   00128E  EF4B  F009         	goto	i2u427_40
  2336   001292                     i2u427_41:
  2337   001292  EF50  F009         	goto	i2l1271
  2338   001296                     i2u427_40:
  2339   001296                     
  2340                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:        (PORTBbits.RB7 == GPIO_LOW) &
      +                          & (RB7_Flag == 0)){;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 92:         RB7_Flag 
      +                          = 1;
  2341   001296  0E01               	movlw	1
  2342   001298  6E52               	movwf	_RB7_Flag^0,c	;volatile
  2343   00129A                     
  2344                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 93:         RB7_ISR(1);
  2345   00129A  0E01               	movlw	1
  2346   00129C  ECB2  F00D         	call	_RB7_ISR
  2347   0012A0                     i2l1271:
  2348                           
  2349                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 97:     if((1 == PIE1bits.ADIE) && (1 ==
      +                           PIR1bits.ADIF)){
  2350   0012A0  AC9D               	btfss	157,6,c	;volatile
  2351   0012A2  EF55  F009         	goto	i2u428_41
  2352   0012A6  EF57  F009         	goto	i2u428_40
  2353   0012AA                     i2u428_41:
  2354   0012AA  EF60  F009         	goto	i2l1273
  2355   0012AE                     i2u428_40:
  2356   0012AE  AC9E               	btfss	158,6,c	;volatile
  2357   0012B0  EF5C  F009         	goto	i2u429_41
  2358   0012B4  EF5E  F009         	goto	i2u429_40
  2359   0012B8                     i2u429_41:
  2360   0012B8  EF60  F009         	goto	i2l1273
  2361   0012BC                     i2u429_40:
  2362   0012BC                     
  2363                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 98:         ADC_ISR();
  2364   0012BC  EC10  F00E         	call	_ADC_ISR	;wreg free
  2365   0012C0                     i2l1273:
  2366                           
  2367                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 102:     if((1 == INTCONbits.TMR0IE) && 
      +                          (1 == INTCONbits.TMR0IF)){
  2368   0012C0  AAF2               	btfss	242,5,c	;volatile
  2369   0012C2  EF65  F009         	goto	i2u430_41
  2370   0012C6  EF67  F009         	goto	i2u430_40
  2371   0012CA                     i2u430_41:
  2372   0012CA  EF70  F009         	goto	i2l1275
  2373   0012CE                     i2u430_40:
  2374   0012CE  A4F2               	btfss	242,2,c	;volatile
  2375   0012D0  EF6C  F009         	goto	i2u431_41
  2376   0012D4  EF6E  F009         	goto	i2u431_40
  2377   0012D8                     i2u431_41:
  2378   0012D8  EF70  F009         	goto	i2l1275
  2379   0012DC                     i2u431_40:
  2380   0012DC                     
  2381                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 103:         TMR0_ISR();
  2382   0012DC  ECFA  F00D         	call	_TMR0_ISR	;wreg free
  2383   0012E0                     i2l1275:
  2384                           
  2385                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:     if((1 == PIE1bits.TMR1IE) && (1
      +                           == PIR1bits.TMR1IF)){
  2386   0012E0  A09D               	btfss	157,0,c	;volatile
  2387   0012E2  EF75  F009         	goto	i2u432_41
  2388   0012E6  EF77  F009         	goto	i2u432_40
  2389   0012EA                     i2u432_41:
  2390   0012EA  EF80  F009         	goto	i2l1277
  2391   0012EE                     i2u432_40:
  2392   0012EE  A09E               	btfss	158,0,c	;volatile
  2393   0012F0  EF7C  F009         	goto	i2u433_41
  2394   0012F4  EF7E  F009         	goto	i2u433_40
  2395   0012F8                     i2u433_41:
  2396   0012F8  EF80  F009         	goto	i2l1277
  2397   0012FC                     i2u433_40:
  2398   0012FC                     
  2399                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         TMR1_ISR();
  2400   0012FC  ECF4  F00D         	call	_TMR1_ISR	;wreg free
  2401   001300                     i2l1277:
  2402                           
  2403                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 110:     if((1 == PIE1bits.TMR2IE) && (1
      +                           == PIR1bits.TMR2IF)){
  2404   001300  A29D               	btfss	157,1,c	;volatile
  2405   001302  EF85  F009         	goto	i2u434_41
  2406   001306  EF87  F009         	goto	i2u434_40
  2407   00130A                     i2u434_41:
  2408   00130A  EF90  F009         	goto	i2l1279
  2409   00130E                     i2u434_40:
  2410   00130E  A29E               	btfss	158,1,c	;volatile
  2411   001310  EF8C  F009         	goto	i2u435_41
  2412   001314  EF8E  F009         	goto	i2u435_40
  2413   001318                     i2u435_41:
  2414   001318  EF90  F009         	goto	i2l1279
  2415   00131C                     i2u435_40:
  2416   00131C                     
  2417                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:         TMR2_ISR();
  2418   00131C  EC00  F00E         	call	_TMR2_ISR	;wreg free
  2419   001320                     i2l1279:
  2420                           
  2421                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 114:     if((1 == PIE2bits.TMR3IE) && (1
      +                           == PIR2bits.TMR3IF)){
  2422   001320  A2A0               	btfss	160,1,c	;volatile
  2423   001322  EF95  F009         	goto	i2u436_41
  2424   001326  EF97  F009         	goto	i2u436_40
  2425   00132A                     i2u436_41:
  2426   00132A  EFA0  F009         	goto	i2l1281
  2427   00132E                     i2u436_40:
  2428   00132E  A2A1               	btfss	161,1,c	;volatile
  2429   001330  EF9C  F009         	goto	i2u437_41
  2430   001334  EF9E  F009         	goto	i2u437_40
  2431   001338                     i2u437_41:
  2432   001338  EFA0  F009         	goto	i2l1281
  2433   00133C                     i2u437_40:
  2434   00133C                     
  2435                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 115:         TMR3_ISR();
  2436   00133C  ECEE  F00D         	call	_TMR3_ISR	;wreg free
  2437   001340                     i2l1281:
  2438                           
  2439                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:     if((1 == PIE1bits.TXIE) && (1 =
      +                          = PIR1bits.TXIF)){
  2440   001340  A89D               	btfss	157,4,c	;volatile
  2441   001342  EFA5  F009         	goto	i2u438_41
  2442   001346  EFA7  F009         	goto	i2u438_40
  2443   00134A                     i2u438_41:
  2444   00134A  EFB0  F009         	goto	i2l1283
  2445   00134E                     i2u438_40:
  2446   00134E  A89E               	btfss	158,4,c	;volatile
  2447   001350  EFAC  F009         	goto	i2u439_41
  2448   001354  EFAE  F009         	goto	i2u439_40
  2449   001358                     i2u439_41:
  2450   001358  EFB0  F009         	goto	i2l1283
  2451   00135C                     i2u439_40:
  2452   00135C                     
  2453                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 120:         EUSART_TX_ISR();
  2454   00135C  EC0A  F00E         	call	_EUSART_TX_ISR	;wreg free
  2455   001360                     i2l1283:
  2456                           
  2457                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 123:     if((1 == PIE1bits.RCIE) && (1 =
      +                          = PIR1bits.RCIF)){
  2458   001360  AA9D               	btfss	157,5,c	;volatile
  2459   001362  EFB5  F009         	goto	i2u440_41
  2460   001366  EFB7  F009         	goto	i2u440_40
  2461   00136A                     i2u440_41:
  2462   00136A  EFC0  F009         	goto	i2l1285
  2463   00136E                     i2u440_40:
  2464   00136E  AA9E               	btfss	158,5,c	;volatile
  2465   001370  EFBC  F009         	goto	i2u441_41
  2466   001374  EFBE  F009         	goto	i2u441_40
  2467   001378                     i2u441_41:
  2468   001378  EFC0  F009         	goto	i2l1285
  2469   00137C                     i2u441_40:
  2470   00137C                     
  2471                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 124:         EUSART_RX_ISR();
  2472   00137C  EC12  F00E         	call	_EUSART_RX_ISR	;wreg free
  2473   001380                     i2l1285:
  2474                           
  2475                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 137:     if((1 == PIE1bits.SSPIE) && (1 
      +                          == PIR1bits.SSPIF)){
  2476   001380  A69D               	btfss	157,3,c	;volatile
  2477   001382  EFC5  F009         	goto	i2u442_41
  2478   001386  EFC7  F009         	goto	i2u442_40
  2479   00138A                     i2u442_41:
  2480   00138A  EFD0  F009         	goto	i2l1287
  2481   00138E                     i2u442_40:
  2482   00138E  A69E               	btfss	158,3,c	;volatile
  2483   001390  EFCC  F009         	goto	i2u443_41
  2484   001394  EFCE  F009         	goto	i2u443_40
  2485   001398                     i2u443_41:
  2486   001398  EFD0  F009         	goto	i2l1287
  2487   00139C                     i2u443_40:
  2488   00139C                     
  2489                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 138:         MSSP_SPI_ISR();
  2490   00139C  EC75  F00D         	call	_MSSP_SPI_ISR	;wreg free
  2491   0013A0                     i2l1287:
  2492                           
  2493                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 143:     if((1 == PIE1bits.CCP1IE) && (1
      +                           == PIR1bits.CCP1IF)){
  2494   0013A0  A49D               	btfss	157,2,c	;volatile
  2495   0013A2  EFD5  F009         	goto	i2u444_41
  2496   0013A6  EFD7  F009         	goto	i2u444_40
  2497   0013AA                     i2u444_41:
  2498   0013AA  EFE0  F009         	goto	i2l1289
  2499   0013AE                     i2u444_40:
  2500   0013AE  A49E               	btfss	158,2,c	;volatile
  2501   0013B0  EFDC  F009         	goto	i2u445_41
  2502   0013B4  EFDE  F009         	goto	i2u445_40
  2503   0013B8                     i2u445_41:
  2504   0013B8  EFE0  F009         	goto	i2l1289
  2505   0013BC                     i2u445_40:
  2506   0013BC                     
  2507                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 144:         CCP1_ISR();
  2508   0013BC  EC0E  F00E         	call	_CCP1_ISR	;wreg free
  2509   0013C0                     i2l1289:
  2510                           
  2511                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 147:     if((1 == PIE2bits.CCP2IE) && (1
      +                           == PIR2bits.CCP2IF)){
  2512   0013C0  A0A0               	btfss	160,0,c	;volatile
  2513   0013C2  EFE5  F009         	goto	i2u446_41
  2514   0013C6  EFE7  F009         	goto	i2u446_40
  2515   0013CA                     i2u446_41:
  2516   0013CA  EFF0  F009         	goto	i2l1292
  2517   0013CE                     i2u446_40:
  2518   0013CE  A0A1               	btfss	161,0,c	;volatile
  2519   0013D0  EFEC  F009         	goto	i2u447_41
  2520   0013D4  EFEE  F009         	goto	i2u447_40
  2521   0013D8                     i2u447_41:
  2522   0013D8  EFF0  F009         	goto	i2l1292
  2523   0013DC                     i2u447_40:
  2524   0013DC                     
  2525                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 148:         CCP2_ISR();
  2526   0013DC  EC0C  F00E         	call	_CCP2_ISR	;wreg free
  2527   0013E0                     i2l1292:
  2528   0013E0  C066  FFF4         	movff	??_InterruptManager+5,prodh
  2529   0013E4  C065  FFF3         	movff	??_InterruptManager+4,prodl
  2530   0013E8  C064  FFDA         	movff	??_InterruptManager+3,fsr2h
  2531   0013EC  C063  FFD9         	movff	??_InterruptManager+2,fsr2l
  2532   0013F0  C062  FFFB         	movff	??_InterruptManager+1,pclatu
  2533   0013F4  C061  FFFA         	movff	??_InterruptManager,pclath
  2534   0013F8  9272               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2535   0013FA  0011               	retfie		f
  2536   0013FC                     __end_of_InterruptManager:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _TMR3_ISR *****************
  2540 ;; Defined at:
  2541 ;;		line 102 in file "MCAL_Layer/Timer3/hal_timr3.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_InterruptManager
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text10
  2569   001BDC                     __ptext10:
  2570                           	callstack 0
  2571   001BDC                     _TMR3_ISR:
  2572                           	callstack 25
  2573   001BDC                     
  2574                           ;MCAL_Layer/Timer3/hal_timr3.c: 103:     (PIR2bits.TMR3IF = 0);
  2575   001BDC  92A1               	bcf	161,1,c	;volatile
  2576   001BDE                     
  2577                           ;MCAL_Layer/Timer3/hal_timr3.c: 104:     TMR3H = (timer3_preload) >> 8;
  2578   001BDE  500C               	movf	(_timer3_preload+1)^0,w,c
  2579   001BE0  6EB3               	movwf	179,c	;volatile
  2580   001BE2                     
  2581                           ;MCAL_Layer/Timer3/hal_timr3.c: 105:     TMR3L = (uint8)(timer3_preload);
  2582   001BE2  C00B  FFB2         	movff	_timer3_preload,4018	;volatile
  2583   001BE6  0012               	return		;funcret
  2584   001BE8                     __end_of_TMR3_ISR:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _TMR2_ISR *****************
  2588 ;; Defined at:
  2589 ;;		line 95 in file "MCAL_Layer/Timer2/hal_timr2.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		None
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_InterruptManager
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text11
  2617   001C00                     __ptext11:
  2618                           	callstack 0
  2619   001C00                     _TMR2_ISR:
  2620                           	callstack 25
  2621   001C00                     
  2622                           ;MCAL_Layer/Timer2/hal_timr2.c: 96:     (PIR1bits.TMR2IF = 0);
  2623   001C00  929E               	bcf	158,1,c	;volatile
  2624                           
  2625                           ;MCAL_Layer/Timer2/hal_timr2.c: 97:     TMR2 = timer2_preload;
  2626   001C02  C03A  FFCC         	movff	_timer2_preload,4044	;volatile
  2627   001C06  0012               	return		;funcret
  2628   001C08                     __end_of_TMR2_ISR:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _TMR1_ISR *****************
  2632 ;; Defined at:
  2633 ;;		line 101 in file "MCAL_Layer/Timer1/hal_timr1.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, status,2
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; This function calls:
  2654 ;;		Nothing
  2655 ;; This function is called by:
  2656 ;;		_InterruptManager
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           	psect	text12
  2661   001BE8                     __ptext12:
  2662                           	callstack 0
  2663   001BE8                     _TMR1_ISR:
  2664                           	callstack 25
  2665   001BE8                     
  2666                           ;MCAL_Layer/Timer1/hal_timr1.c: 102:     (PIR1bits.TMR1IF = 0);
  2667   001BE8  909E               	bcf	158,0,c	;volatile
  2668   001BEA                     
  2669                           ;MCAL_Layer/Timer1/hal_timr1.c: 103:     TMR1H = (timer1_preload) >> 8;
  2670   001BEA  5012               	movf	(_timer1_preload+1)^0,w,c	;volatile
  2671   001BEC  6ECF               	movwf	207,c	;volatile
  2672   001BEE                     
  2673                           ;MCAL_Layer/Timer1/hal_timr1.c: 104:     TMR1L = (uint8)(timer1_preload);
  2674   001BEE  C011  FFCE         	movff	_timer1_preload,4046	;volatile
  2675   001BF2  0012               	return		;funcret
  2676   001BF4                     __end_of_TMR1_ISR:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _TMR0_ISR *****************
  2680 ;; Defined at:
  2681 ;;		line 106 in file "MCAL_Layer/Timer0/hal_timr0.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_InterruptManager
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text13
  2709   001BF4                     __ptext13:
  2710                           	callstack 0
  2711   001BF4                     _TMR0_ISR:
  2712                           	callstack 25
  2713   001BF4                     
  2714                           ;MCAL_Layer/Timer0/hal_timr0.c: 107:     (INTCONbits.TMR0IF = 0);
  2715   001BF4  94F2               	bcf	242,2,c	;volatile
  2716   001BF6                     
  2717                           ;MCAL_Layer/Timer0/hal_timr0.c: 108:     TMR0H = (timer0_preload) >> 8;
  2718   001BF6  5016               	movf	(_timer0_preload+1)^0,w,c
  2719   001BF8  6ED7               	movwf	215,c	;volatile
  2720   001BFA                     
  2721                           ;MCAL_Layer/Timer0/hal_timr0.c: 109:     TMR0L = (uint8)(timer0_preload);
  2722   001BFA  C015  FFD6         	movff	_timer0_preload,4054	;volatile
  2723   001BFE  0012               	return		;funcret
  2724   001C00                     __end_of_TMR0_ISR:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _RB7_ISR *****************
  2728 ;; Defined at:
  2729 ;;		line 163 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  RB7_Source      1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, status,0
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;Total ram usage:        1 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; This function calls:
  2750 ;;		Nothing
  2751 ;; This function is called by:
  2752 ;;		_InterruptManager
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text14
  2757   001B64                     __ptext14:
  2758                           	callstack 0
  2759   001B64                     _RB7_ISR:
  2760                           	callstack 25
  2761                           
  2762                           ;incstack = 0
  2763                           ;RB7_ISR@RB7_Source stored from wreg
  2764   001B64  6E5A               	movwf	RB7_ISR@RB7_Source^0,c
  2765   001B66                     
  2766                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 165:     (INTCONbits.RBIF = 0);
  2767   001B66  90F2               	bcf	242,0,c	;volatile
  2768   001B68                     
  2769                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 168:     if(0 == RB7_Source){
  2770   001B68  505A               	movf	RB7_ISR@RB7_Source^0,w,c
  2771   001B6A  A4D8               	btfss	status,2,c
  2772   001B6C  EFBA  F00D         	goto	i2u56_41
  2773   001B70  EFBC  F00D         	goto	i2u56_40
  2774   001B74                     i2u56_41:
  2775   001B74  EFBE  F00D         	goto	i2l3144
  2776   001B78                     i2u56_40:
  2777   001B78  EFBE  F00D         	goto	i2l1028
  2778   001B7C                     i2l3144:
  2779   001B7C                     i2l1028:
  2780   001B7C  0012               	return		;funcret
  2781   001B7E                     __end_of_RB7_ISR:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _RB6_ISR *****************
  2785 ;; Defined at:
  2786 ;;		line 144 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  RB6_Source      1    wreg     unsigned char 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;Total ram usage:        1 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_InterruptManager
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text15
  2814   001B7E                     __ptext15:
  2815                           	callstack 0
  2816   001B7E                     _RB6_ISR:
  2817                           	callstack 25
  2818                           
  2819                           ;incstack = 0
  2820                           ;RB6_ISR@RB6_Source stored from wreg
  2821   001B7E  6E5A               	movwf	RB6_ISR@RB6_Source^0,c
  2822   001B80                     
  2823                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 146:     (INTCONbits.RBIF = 0);
  2824   001B80  90F2               	bcf	242,0,c	;volatile
  2825   001B82                     
  2826                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 149:     if(0 == RB6_Source){
  2827   001B82  505A               	movf	RB6_ISR@RB6_Source^0,w,c
  2828   001B84  A4D8               	btfss	status,2,c
  2829   001B86  EFC7  F00D         	goto	i2u55_41
  2830   001B8A  EFC9  F00D         	goto	i2u55_40
  2831   001B8E                     i2u55_41:
  2832   001B8E  EFCB  F00D         	goto	i2l3130
  2833   001B92                     i2u55_40:
  2834   001B92  EFCB  F00D         	goto	i2l1017
  2835   001B96                     i2l3130:
  2836   001B96                     i2l1017:
  2837   001B96  0012               	return		;funcret
  2838   001B98                     __end_of_RB6_ISR:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _RB5_ISR *****************
  2842 ;; Defined at:
  2843 ;;		line 125 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  RB5_Source      1    wreg     unsigned char 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, status,2, status,0
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;Total ram usage:        1 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_InterruptManager
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text16
  2871   001B98                     __ptext16:
  2872                           	callstack 0
  2873   001B98                     _RB5_ISR:
  2874                           	callstack 25
  2875                           
  2876                           ;incstack = 0
  2877                           ;RB5_ISR@RB5_Source stored from wreg
  2878   001B98  6E5A               	movwf	RB5_ISR@RB5_Source^0,c
  2879   001B9A                     
  2880                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 127:     (INTCONbits.RBIF = 0);
  2881   001B9A  90F2               	bcf	242,0,c	;volatile
  2882   001B9C                     
  2883                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 130:     if(0 == RB5_Source){
  2884   001B9C  505A               	movf	RB5_ISR@RB5_Source^0,w,c
  2885   001B9E  A4D8               	btfss	status,2,c
  2886   001BA0  EFD4  F00D         	goto	i2u54_41
  2887   001BA4  EFD6  F00D         	goto	i2u54_40
  2888   001BA8                     i2u54_41:
  2889   001BA8  EFD8  F00D         	goto	i2l3116
  2890   001BAC                     i2u54_40:
  2891   001BAC  EFD8  F00D         	goto	i2l1006
  2892   001BB0                     i2l3116:
  2893   001BB0                     i2l1006:
  2894   001BB0  0012               	return		;funcret
  2895   001BB2                     __end_of_RB5_ISR:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _RB4_ISR *****************
  2899 ;; Defined at:
  2900 ;;		line 106 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  RB4_Source      1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        1 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_InterruptManager
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text17
  2928   001BB2                     __ptext17:
  2929                           	callstack 0
  2930   001BB2                     _RB4_ISR:
  2931                           	callstack 25
  2932                           
  2933                           ;incstack = 0
  2934                           ;RB4_ISR@RB4_Source stored from wreg
  2935   001BB2  6E5A               	movwf	RB4_ISR@RB4_Source^0,c
  2936   001BB4                     
  2937                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 108:     (INTCONbits.RBIF = 0);
  2938   001BB4  90F2               	bcf	242,0,c	;volatile
  2939   001BB6                     
  2940                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 111:     if(0 == RB4_Source){
  2941   001BB6  505A               	movf	RB4_ISR@RB4_Source^0,w,c
  2942   001BB8  A4D8               	btfss	status,2,c
  2943   001BBA  EFE1  F00D         	goto	i2u53_41
  2944   001BBE  EFE3  F00D         	goto	i2u53_40
  2945   001BC2                     i2u53_41:
  2946   001BC2  EFE5  F00D         	goto	i2l3102
  2947   001BC6                     i2u53_40:
  2948   001BC6  EFE5  F00D         	goto	i2l995
  2949   001BCA                     i2l3102:
  2950   001BCA                     i2l995:
  2951   001BCA  0012               	return		;funcret
  2952   001BCC                     __end_of_RB4_ISR:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _MSSP_SPI_ISR *****************
  2956 ;; Defined at:
  2957 ;;		line 172 in file "MCAL_Layer/SPI/hal_spi.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used: 1
  2977 ;; Hardware stack levels required when called: 2
  2978 ;; This function calls:
  2979 ;;		NULL
  2980 ;;		_led2_func
  2981 ;; This function is called by:
  2982 ;;		_InterruptManager
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text18
  2987   001AEA                     __ptext18:
  2988                           	callstack 0
  2989   001AEA                     _MSSP_SPI_ISR:
  2990                           	callstack 23
  2991   001AEA                     
  2992                           ;MCAL_Layer/SPI/hal_spi.c: 174:     (PIR1bits.SSPIF = 0);
  2993   001AEA  969E               	bcf	158,3,c	;volatile
  2994   001AEC                     
  2995                           ;MCAL_Layer/SPI/hal_spi.c: 175:     if(SPI_InterruptHandler){
  2996   001AEC  5001               	movf	_SPI_InterruptHandler^0,w,c
  2997   001AEE  1002               	iorwf	(_SPI_InterruptHandler+1)^0,w,c
  2998   001AF0  B4D8               	btfsc	status,2,c
  2999   001AF2  EF7D  F00D         	goto	i2u333_41
  3000   001AF6  EF7F  F00D         	goto	i2u333_40
  3001   001AFA                     i2u333_41:
  3002   001AFA  EF8B  F00D         	goto	i2l2013
  3003   001AFE                     i2u333_40:
  3004   001AFE                     
  3005                           ;MCAL_Layer/SPI/hal_spi.c: 176:         SPI_InterruptHandler();
  3006   001AFE  D802               	call	i2u334_48
  3007   001B00  EF8B  F00D         	goto	i2u334_49
  3008   001B04                     i2u334_48:
  3009   001B04  0005               	push	
  3010   001B06  6EFA               	movwf	pclath,c
  3011   001B08  5001               	movf	_SPI_InterruptHandler^0,w,c
  3012   001B0A  6EFD               	movwf	tosl,c
  3013   001B0C  5002               	movf	(_SPI_InterruptHandler+1)^0,w,c
  3014   001B0E  6EFE               	movwf	tosh,c
  3015   001B10  6AFF               	clrf	tosu,c
  3016   001B12  50FA               	movf	pclath,w,c
  3017   001B14  0012               	return		;indir
  3018   001B16                     i2u334_49:
  3019   001B16                     i2l2013:
  3020   001B16  0012               	return		;funcret
  3021   001B18                     __end_of_MSSP_SPI_ISR:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _led2_func *****************
  3025 ;; Defined at:
  3026 ;;		line 248 in file "./application.h"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 1
  3047 ;; This function calls:
  3048 ;;		_gpio_pin_toggle_logic
  3049 ;; This function is called by:
  3050 ;;		_MSSP_SPI_ISR
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text19
  3055   001BCC                     __ptext19:
  3056                           	callstack 0
  3057   001BCC                     _led2_func:
  3058                           	callstack 23
  3059   001BCC                     
  3060                           ;./application.h: 250:     master_val++;
  3061   001BCC  2A38               	incf	_master_val^0,f,c	;volatile
  3062   001BCE                     
  3063                           ;./application.h: 251:     gpio_pin_toggle_logic(&led1);
  3064   001BCE  0E59               	movlw	low _led1
  3065   001BD0  6E5A               	movwf	gpio_pin_toggle_logic@_pin_config^0,c
  3066   001BD2  0E00               	movlw	high _led1
  3067   001BD4  6E5B               	movwf	(gpio_pin_toggle_logic@_pin_config+1)^0,c
  3068   001BD6  EC35  F00C         	call	_gpio_pin_toggle_logic	;wreg free
  3069   001BDA  0012               	return		;funcret
  3070   001BDC                     __end_of_led2_func:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function _gpio_pin_toggle_logic *****************
  3074 ;; Defined at:
  3075 ;;		line 86 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  _pin_config     2    0[COMRAM] PTR const struct PIN_CON
  3078 ;;		 -> led1(1), 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  ret             1    0        unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      unsigned char 
  3083 ;; Registers used:
  3084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;Total ram usage:        7 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_led2_func
  3100 ;;		_led1_func
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text20
  3105   00186A                     __ptext20:
  3106                           	callstack 0
  3107   00186A                     _gpio_pin_toggle_logic:
  3108                           	callstack 23
  3109   00186A                     
  3110                           ;MCAL_Layer/GPIO/hal_gpio.c: 89:     if(_pin_config==((void*)0) || _pin_config->pin > (8
      +                           - 1) )
  3111   00186A  505A               	movf	gpio_pin_toggle_logic@_pin_config^0,w,c
  3112   00186C  105B               	iorwf	(gpio_pin_toggle_logic@_pin_config+1)^0,w,c
  3113   00186E  B4D8               	btfsc	status,2,c
  3114   001870  EF3C  F00C         	goto	i2u301_41
  3115   001874  EF3E  F00C         	goto	i2u301_40
  3116   001878                     i2u301_41:
  3117   001878  EF4F  F00C         	goto	i2l5054
  3118   00187C                     i2u301_40:
  3119   00187C  C05A  FFD9         	movff	gpio_pin_toggle_logic@_pin_config,fsr2l
  3120   001880  C05B  FFDA         	movff	gpio_pin_toggle_logic@_pin_config+1,fsr2h
  3121   001884  30DF               	rrcf	223,w,c
  3122   001886  32E8               	rrcf	wreg,f,c
  3123   001888  32E8               	rrcf	wreg,f,c
  3124   00188A  0B07               	andlw	7
  3125   00188C  6E5C               	movwf	??_gpio_pin_toggle_logic^0,c
  3126   00188E  0E07               	movlw	7
  3127   001890  645C               	cpfsgt	??_gpio_pin_toggle_logic^0,c
  3128   001892  EF4D  F00C         	goto	i2u302_41
  3129   001896  EF4F  F00C         	goto	i2u302_40
  3130   00189A                     i2u302_41:
  3131   00189A  EF51  F00C         	goto	i2l5056
  3132   00189E                     i2u302_40:
  3133   00189E                     i2l5054:
  3134                           
  3135                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     }
  3136   00189E  EF7D  F00C         	goto	i2l850
  3137   0018A2                     i2l5056:
  3138                           
  3139                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:     {;MCAL_Layer/GPIO/hal_gpio.c: 95:          (*lat_re
      +                          gisters[_pin_config->port]^=((uint8)1<<_pin_config->pin));
  3140   0018A2  C05A  FFD9         	movff	gpio_pin_toggle_logic@_pin_config,fsr2l
  3141   0018A6  C05B  FFDA         	movff	gpio_pin_toggle_logic@_pin_config+1,fsr2h
  3142   0018AA  30DF               	rrcf	223,w,c
  3143   0018AC  32E8               	rrcf	wreg,f,c
  3144   0018AE  32E8               	rrcf	wreg,f,c
  3145   0018B0  0B07               	andlw	7
  3146   0018B2  6E5C               	movwf	??_gpio_pin_toggle_logic^0,c
  3147   0018B4  0E01               	movlw	1
  3148   0018B6  6E5D               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  3149   0018B8  2A5C               	incf	??_gpio_pin_toggle_logic^0,f,c
  3150   0018BA  EF61  F00C         	goto	i2u303_44
  3151   0018BE                     i2u303_45:
  3152   0018BE  90D8               	bcf	status,0,c
  3153   0018C0  365D               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  3154   0018C2                     i2u303_44:
  3155   0018C2  2E5C               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  3156   0018C4  EF5F  F00C         	goto	i2u303_45
  3157   0018C8  C05A  FFD9         	movff	gpio_pin_toggle_logic@_pin_config,fsr2l
  3158   0018CC  C05B  FFDA         	movff	gpio_pin_toggle_logic@_pin_config+1,fsr2h
  3159   0018D0  50DF               	movf	223,w,c
  3160   0018D2  0B07               	andlw	7
  3161   0018D4  6E5E               	movwf	(??_gpio_pin_toggle_logic+2)^0,c
  3162   0018D6  505E               	movf	(??_gpio_pin_toggle_logic+2)^0,w,c
  3163   0018D8  0D02               	mullw	2
  3164   0018DA  0E3B               	movlw	low _lat_registers
  3165   0018DC  24F3               	addwf	243,w,c
  3166   0018DE  6ED9               	movwf	fsr2l,c
  3167   0018E0  0E00               	movlw	high _lat_registers
  3168   0018E2  20F4               	addwfc	prodh,w,c
  3169   0018E4  6EDA               	movwf	fsr2h,c
  3170   0018E6  CFDE F05F          	movff	postinc2,??_gpio_pin_toggle_logic+3
  3171   0018EA  CFDD F060          	movff	postdec2,??_gpio_pin_toggle_logic+4
  3172   0018EE  C05F  FFD9         	movff	??_gpio_pin_toggle_logic+3,fsr2l
  3173   0018F2  C060  FFDA         	movff	??_gpio_pin_toggle_logic+4,fsr2h
  3174   0018F6  505D               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  3175   0018F8  1ADF               	xorwf	indf2,f,c
  3176   0018FA                     i2l850:
  3177   0018FA  0012               	return		;funcret
  3178   0018FC                     __end_of_gpio_pin_toggle_logic:
  3179                           	callstack 0
  3180                           
  3181 ;; *************** function _INT2_ISR *****************
  3182 ;; Defined at:
  3183 ;;		line 94 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		None
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_InterruptManager
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text21
  3211   001C08                     __ptext21:
  3212                           	callstack 0
  3213   001C08                     _INT2_ISR:
  3214                           	callstack 25
  3215   001C08                     
  3216                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 96:     (INTCON3bits.INT2IF = 0);
  3217   001C08  92F0               	bcf	240,1,c	;volatile
  3218   001C0A  0012               	return		;funcret
  3219   001C0C                     __end_of_INT2_ISR:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _INT1_ISR *****************
  3223 ;; Defined at:
  3224 ;;		line 85 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		None
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:        0 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_InterruptManager
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text22
  3252   001C0C                     __ptext22:
  3253                           	callstack 0
  3254   001C0C                     _INT1_ISR:
  3255                           	callstack 25
  3256   001C0C                     
  3257                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 87:     (INTCON3bits.INT1IF = 0);
  3258   001C0C  90F0               	bcf	240,0,c	;volatile
  3259   001C0E  0012               	return		;funcret
  3260   001C10                     __end_of_INT1_ISR:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _INT0_ISR *****************
  3264 ;; Defined at:
  3265 ;;		line 73 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		None
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_InterruptManager
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text23
  3293   001C10                     __ptext23:
  3294                           	callstack 0
  3295   001C10                     _INT0_ISR:
  3296                           	callstack 25
  3297   001C10                     
  3298                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 75:     (INTCONbits.INT0IF = 0);
  3299   001C10  92F2               	bcf	242,1,c	;volatile
  3300   001C12  0012               	return		;funcret
  3301   001C14                     __end_of_INT0_ISR:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _EUSART_TX_ISR *****************
  3305 ;; Defined at:
  3306 ;;		line 243 in file "MCAL_Layer/usart/hal_usart.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		None
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_InterruptManager
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text24
  3334   001C14                     __ptext24:
  3335                           	callstack 0
  3336   001C14                     _EUSART_TX_ISR:
  3337                           	callstack 25
  3338   001C14                     
  3339                           ;MCAL_Layer/usart/hal_usart.c: 244:     (PIE1bits.TXIE = 0);
  3340   001C14  989D               	bcf	157,4,c	;volatile
  3341   001C16  0012               	return		;funcret
  3342   001C18                     __end_of_EUSART_TX_ISR:
  3343                           	callstack 0
  3344                           
  3345 ;; *************** function _EUSART_RX_ISR *****************
  3346 ;; Defined at:
  3347 ;;		line 250 in file "MCAL_Layer/usart/hal_usart.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;		None
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;		None
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      void 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;Total ram usage:        0 bytes
  3366 ;; Hardware stack levels used: 1
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		_InterruptManager
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text25
  3375   001C24                     __ptext25:
  3376                           	callstack 0
  3377   001C24                     _EUSART_RX_ISR:
  3378                           	callstack 25
  3379   001C24  0012               	return		;funcret
  3380   001C26                     __end_of_EUSART_RX_ISR:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _CCP2_ISR *****************
  3384 ;; Defined at:
  3385 ;;		line 259 in file "MCAL_Layer/CCP/hal_ccp.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      void 
  3392 ;; Registers used:
  3393 ;;		None
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_InterruptManager
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text26
  3413   001C18                     __ptext26:
  3414                           	callstack 0
  3415   001C18                     _CCP2_ISR:
  3416                           	callstack 25
  3417   001C18                     
  3418                           ;MCAL_Layer/CCP/hal_ccp.c: 260:     (PIR2bits.CCP2IF = 0);
  3419   001C18  90A1               	bcf	161,0,c	;volatile
  3420   001C1A  0012               	return		;funcret
  3421   001C1C                     __end_of_CCP2_ISR:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _CCP1_ISR *****************
  3425 ;; Defined at:
  3426 ;;		line 251 in file "MCAL_Layer/CCP/hal_ccp.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;		None
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  1    wreg      void 
  3433 ;; Registers used:
  3434 ;;		None
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;Total ram usage:        0 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_InterruptManager
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text27
  3454   001C1C                     __ptext27:
  3455                           	callstack 0
  3456   001C1C                     _CCP1_ISR:
  3457                           	callstack 25
  3458   001C1C                     
  3459                           ;MCAL_Layer/CCP/hal_ccp.c: 252:     (PIR1bits.CCP1IF = 0);
  3460   001C1C  949E               	bcf	158,2,c	;volatile
  3461   001C1E  0012               	return		;funcret
  3462   001C20                     __end_of_CCP1_ISR:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _ADC_ISR *****************
  3466 ;; Defined at:
  3467 ;;		line 295 in file "MCAL_Layer/ADC/hal_adc.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		None
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_InterruptManager
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text28
  3495   001C20                     __ptext28:
  3496                           	callstack 0
  3497   001C20                     _ADC_ISR:
  3498                           	callstack 25
  3499   001C20                     
  3500                           ;MCAL_Layer/ADC/hal_adc.c: 296:     (PIR1bits.ADIF = 0);
  3501   001C20  9C9E               	bcf	158,6,c	;volatile
  3502   001C22  0012               	return		;funcret
  3503   001C24                     __end_of_ADC_ISR:
  3504                           	callstack 0
  3505                           
  3506                           	psect	text29
  3507   000000                     __ptext29:
  3508                           	callstack 0
  3509   000000                     
  3510                           	psect	rparam
  3511   000000                     
  3512                           	psect	temp
  3513   000072                     btemp:
  3514                           	callstack 0
  3515   000072                     	ds	1
  3516   000000                     int$flags	set	btemp
  3517   000000                     wtemp8	set	btemp+1
  3518   000000                     ttemp5	set	btemp+1
  3519   000000                     ttemp6	set	btemp+4
  3520   000000                     ttemp7	set	btemp+8
  3521                           
  3522                           	psect	idloc
  3523                           
  3524                           ;Config register IDLOC0 @ 0x200000
  3525                           ;	unspecified, using default values
  3526   200000                     	org	2097152
  3527   200000  FF                 	db	255
  3528                           
  3529                           ;Config register IDLOC1 @ 0x200001
  3530                           ;	unspecified, using default values
  3531   200001                     	org	2097153
  3532   200001  FF                 	db	255
  3533                           
  3534                           ;Config register IDLOC2 @ 0x200002
  3535                           ;	unspecified, using default values
  3536   200002                     	org	2097154
  3537   200002  FF                 	db	255
  3538                           
  3539                           ;Config register IDLOC3 @ 0x200003
  3540                           ;	unspecified, using default values
  3541   200003                     	org	2097155
  3542   200003  FF                 	db	255
  3543                           
  3544                           ;Config register IDLOC4 @ 0x200004
  3545                           ;	unspecified, using default values
  3546   200004                     	org	2097156
  3547   200004  FF                 	db	255
  3548                           
  3549                           ;Config register IDLOC5 @ 0x200005
  3550                           ;	unspecified, using default values
  3551   200005                     	org	2097157
  3552   200005  FF                 	db	255
  3553                           
  3554                           ;Config register IDLOC6 @ 0x200006
  3555                           ;	unspecified, using default values
  3556   200006                     	org	2097158
  3557   200006  FF                 	db	255
  3558                           
  3559                           ;Config register IDLOC7 @ 0x200007
  3560                           ;	unspecified, using default values
  3561   200007                     	org	2097159
  3562   200007  FF                 	db	255
  3563                           
  3564                           	psect	config
  3565                           
  3566                           ; Padding undefined space
  3567   300000                     	org	3145728
  3568   300000  FF                 	db	255
  3569                           
  3570                           ;Config register CONFIG1H @ 0x300001
  3571                           ;	Oscillator Selection bits
  3572                           ;	OSC = HS, HS oscillator
  3573                           ;	Fail-Safe Clock Monitor Enable bit
  3574                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3575                           ;	Internal/External Oscillator Switchover bit
  3576                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3577   300001                     	org	3145729
  3578   300001  02                 	db	2
  3579                           
  3580                           ;Config register CONFIG2L @ 0x300002
  3581                           ;	Power-up Timer Enable bit
  3582                           ;	PWRT = OFF, PWRT disabled
  3583                           ;	Brown-out Reset Enable bits
  3584                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3585                           ;	Brown Out Reset Voltage bits
  3586                           ;	BORV = 1, 
  3587   300002                     	org	3145730
  3588   300002  09                 	db	9
  3589                           
  3590                           ;Config register CONFIG2H @ 0x300003
  3591                           ;	Watchdog Timer Enable bit
  3592                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3593                           ;	Watchdog Timer Postscale Select bits
  3594                           ;	WDTPS = 32768, 1:32768
  3595   300003                     	org	3145731
  3596   300003  1E                 	db	30
  3597                           
  3598                           ; Padding undefined space
  3599   300004                     	org	3145732
  3600   300004  FF                 	db	255
  3601                           
  3602                           ;Config register CONFIG3H @ 0x300005
  3603                           ;	CCP2 MUX bit
  3604                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3605                           ;	PORTB A/D Enable bit
  3606                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3607                           ;	Low-Power Timer1 Oscillator Enable bit
  3608                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3609                           ;	MCLR Pin Enable bit
  3610                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3611   300005                     	org	3145733
  3612   300005  81                 	db	129
  3613                           
  3614                           ;Config register CONFIG4L @ 0x300006
  3615                           ;	Stack Full/Underflow Reset Enable bit
  3616                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3617                           ;	Single-Supply ICSP Enable bit
  3618                           ;	LVP = OFF, Single-Supply ICSP disabled
  3619                           ;	Extended Instruction Set Enable bit
  3620                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3621                           ;	Background Debugger Enable bit
  3622                           ;	DEBUG = 0x1, unprogrammed default
  3623   300006                     	org	3145734
  3624   300006  81                 	db	129
  3625                           
  3626                           ; Padding undefined space
  3627   300007                     	org	3145735
  3628   300007  FF                 	db	255
  3629                           
  3630                           ;Config register CONFIG5L @ 0x300008
  3631                           ;	Code Protection bit
  3632                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3633                           ;	Code Protection bit
  3634                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3635                           ;	Code Protection bit
  3636                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3637                           ;	Code Protection bit
  3638                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3639   300008                     	org	3145736
  3640   300008  0F                 	db	15
  3641                           
  3642                           ;Config register CONFIG5H @ 0x300009
  3643                           ;	Boot Block Code Protection bit
  3644                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3645                           ;	Data EEPROM Code Protection bit
  3646                           ;	CPD = OFF, Data EEPROM not code-protected
  3647   300009                     	org	3145737
  3648   300009  C0                 	db	192
  3649                           
  3650                           ;Config register CONFIG6L @ 0x30000A
  3651                           ;	Write Protection bit
  3652                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3653                           ;	Write Protection bit
  3654                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3655                           ;	Write Protection bit
  3656                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3657                           ;	Write Protection bit
  3658                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3659   30000A                     	org	3145738
  3660   30000A  0F                 	db	15
  3661                           
  3662                           ;Config register CONFIG6H @ 0x30000B
  3663                           ;	Configuration Register Write Protection bit
  3664                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3665                           ;	Boot Block Write Protection bit
  3666                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3667                           ;	Data EEPROM Write Protection bit
  3668                           ;	WRTD = OFF, Data EEPROM not write-protected
  3669   30000B                     	org	3145739
  3670   30000B  E0                 	db	224
  3671                           
  3672                           ;Config register CONFIG7L @ 0x30000C
  3673                           ;	Table Read Protection bit
  3674                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3675                           ;	Table Read Protection bit
  3676                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3677                           ;	Table Read Protection bit
  3678                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3679                           ;	Table Read Protection bit
  3680                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3681   30000C                     	org	3145740
  3682   30000C  0F                 	db	15
  3683                           
  3684                           ;Config register CONFIG7H @ 0x30000D
  3685                           ;	Boot Block Table Read Protection bit
  3686                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3687   30000D                     	org	3145741
  3688   30000D  40                 	db	64
  3689                           tosu	equ	0xFFF
  3690                           tosh	equ	0xFFE
  3691                           tosl	equ	0xFFD
  3692                           stkptr	equ	0xFFC
  3693                           pclatu	equ	0xFFB
  3694                           pclath	equ	0xFFA
  3695                           pcl	equ	0xFF9
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           indf0	equ	0xFEF
  3703                           postinc0	equ	0xFEE
  3704                           postdec0	equ	0xFED
  3705                           preinc0	equ	0xFEC
  3706                           plusw0	equ	0xFEB
  3707                           fsr0h	equ	0xFEA
  3708                           fsr0l	equ	0xFE9
  3709                           wreg	equ	0xFE8
  3710                           indf1	equ	0xFE7
  3711                           postinc1	equ	0xFE6
  3712                           postdec1	equ	0xFE5
  3713                           preinc1	equ	0xFE4
  3714                           plusw1	equ	0xFE3
  3715                           fsr1h	equ	0xFE2
  3716                           fsr1l	equ	0xFE1
  3717                           bsr	equ	0xFE0
  3718                           indf2	equ	0xFDF
  3719                           postinc2	equ	0xFDE
  3720                           postdec2	equ	0xFDD
  3721                           preinc2	equ	0xFDC
  3722                           plusw2	equ	0xFDB
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        124
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     24     113
    BANK0           128     10     103
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_Inst	PTR const struct . size(2) Largest target is 5
		 -> spi_obj1_master(BANK0[5]), 

    S4692$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4692$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_Inst.MSSP_SPI_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led2_func(), 

    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_Inst	PTR const struct . size(2) Largest target is 5
		 -> spi_obj1_master(BANK0[5]), 

    SPI_Send_Byte@SPI_Inst	PTR const struct . size(2) Largest target is 5
		 -> spi_obj1_master(BANK0[5]), 

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led2_func(), NULL(), 

    MSSP_SPI_Mode_Initialize@SPI_Inst.MSSP_SPI_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led2_func(), 

    MSSP_SPI_Mode_Initialize@SPI_Inst	PTR const struct . size(2) Largest target is 5
		 -> spi_obj1_master(BANK0[5]), 

    spi_obj1_slave.MSSP_SPI_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led2_func(), 

    S3672$MSSP_SPI_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led2_func(), 

    spi_obj1_master.MSSP_SPI_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> led2_func(), 

    usart_obj1.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    usart_obj1.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    usart_obj1.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    usart_obj1.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3117$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3117$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S3117$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3117$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2910$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2768$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()volatile void  size(2) Largest target is 1
		 -> NULL(), 

    S2565$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2387$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1740$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1856$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1856$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@int_obj.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_initialize@_pin_config	PTR const struct PIN_CONFIG size(2) Largest target is 1
		 -> led3(COMRAM[1]), led2(COMRAM[1]), led1(COMRAM[1]), 

    gpio_pin_toggle_logic@_pin_config	PTR const struct PIN_CONFIG size(2) Largest target is 1
		 -> led1(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct PIN_CONFIG size(2) Largest target is 1
		 -> led3(COMRAM[1]), led2(COMRAM[1]), SPI_SS(COMRAM[1]), led1(COMRAM[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct PIN_CONFIG size(2) Largest target is 1
		 -> MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS(BANK0[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK(BANK0[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI(BANK0[1]), MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO(BANK0[1]), 
		 -> MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK(BANK0[1]), MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI(BANK0[1]), MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO(BANK0[1]), led3(COMRAM[1]), 
		 -> led2(COMRAM[1]), led1(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRhll[1]), PORTD(BITBIGSFRl[1]), PORTC(BITBIGSFRl[1]), PORTB(SFR[1]), 
		 -> PORTA(BITBIGSFRl[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRhlh[1]), LATD(BITBIGSFRhlh[1]), LATC(BITBIGSFRhlh[1]), LATB(BITBIGSFRhlh[1]), 
		 -> LATA(BITBIGSFRhll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(BITBIGSFRhhlll[1]), TRISC(BITBIGSFRhhlll[1]), TRISB(BITBIGSFRhhlll[1]), TRISE(BITBIGSFRhhlll[1]), 
		 -> TRISA(BITBIGSFRhll[1]), 

    CCP_Compare_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Compare_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Capture_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Mode_Timer_Select@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Interrupt_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Mode_Config@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP_PWM_Stop@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Stop@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Start@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_PWM_Set_Duty@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_DeInit@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S980$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S980$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@_ccp_obj.CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S552$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _initalize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _MSSP_SPI_Mode_Initialize->_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations
    _MSSP_SPI_Mode_Initialize->_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
    _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations->_gpio_pin_direction_initialize
    _MSSP_SPI_Master_Mode_GPIO_PIN_Configurations->_gpio_pin_direction_initialize

Critical Paths under _InterruptManager in COMRAM

    _led2_func->_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _initalize->_MSSP_SPI_Mode_Initialize
    _MSSP_SPI_Mode_Initialize->_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17491
                                              8 BANK0      2     2      0
                      _SPI_Send_Byte
               _gpio_pin_write_logic
                          _initalize
 ---------------------------------------------------------------------------------
 (1) _initalize                                            0     0      0   12049
           _MSSP_SPI_Mode_Initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    7903
                                             23 COMRAM     1     1      0
                                              0 BANK0      3     1      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                10     7      3    4934
                                             13 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _MSSP_SPI_Mode_Initialize                             4     2      2    4146
                                              5 BANK0      3     1      2
_MSSP_SPI_Master_Mode_GPIO_PIN_Confi
_MSSP_SPI_Slave_Mode_GPIO_PIN_Config
 ---------------------------------------------------------------------------------
 (3) _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations          7     5      2    1846
                                             22 COMRAM     2     0      2
                                              0 BANK0      5     5      0
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _MSSP_SPI_Master_Mode_GPIO_PIN_Configurations         5     3      2    1763
                                             22 COMRAM     2     0      2
                                              0 BANK0      3     3      0
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2    1517
                                             13 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _SPI_Send_Byte                                        4     1      3     508
                                             13 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptManager                                     6     6      0     368
                                              7 COMRAM     6     6      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _MSSP_SPI_ISR                                         0     0      0     248
                                NULL *
                          _led2_func *
 ---------------------------------------------------------------------------------
 (7) _led2_func                                            0     0      0     248
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (8) _gpio_pin_toggle_logic                                8     6      2     248
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Send_Byte
   _gpio_pin_write_logic
   _initalize
     _MSSP_SPI_Mode_Initialize
       _MSSP_SPI_Master_Mode_GPIO_PIN_Configurations
         _gpio_pin_direction_initialize
       _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations
         _gpio_pin_direction_initialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_SPI_ISR
     NULL(Fake) *
     _led2_func *
       _gpio_pin_toggle_logic
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      A      67       5       80.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     18      71       1       89.7%
BITBIGSFRhhhlhh     18      0       0      38        0.0%
BITBIGSFRhhhh        D      0       0      37        0.0%
BITBIGSFRhhlll       6      0       0      48        0.0%
BITBIGSFRhhhlhh      5      0       0      39        0.0%
BITBIGSFRhhllhl      4      0       0      45        0.0%
BITBIGSFRhhllhl      4      0       0      46        0.0%
BITBIGSFRhlh         4      0       0      49        0.0%
BITBIGSFRhll         4      0       0      50        0.0%
BITBIGSFRhhhlhl      1      0       0      40        0.0%
BITBIGSFRhhllhl      1      0       0      44        0.0%
BITBIGSFRhhllhl      1      0       0      43        0.0%
BITBIGSFRhhllhh      1      0       0      42        0.0%
BITBIGSFRhhhlhl      1      0       0      41        0.0%
BITBIGSFRhhllhl      1      0       0      47        0.0%
BITBIGSFRl           1      0       0      51        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D8      28        0.0%
DATA                 0      0      D8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue May 02 16:54:22 2023

                                  ??_InterruptManager 0061                                           _SSPSTATbits 0FC7  
                                       _SPI_Send_Byte 1B18                                                   l818 16A2  
                                                 l836 17CE                                                   l857 196C  
                                                 _PR2 0FCB                             _RB5_InterruptHandler_HIGH 0023  
                                     __end_of_ADC_ISR 1C24                                                   prod 0FF3  
                                                 tosl 0FFD                                                   wreg 0FE8  
                    __end_of_MSSP_SPI_Mode_Initialize 1560                                       __end_of_RB4_ISR 1BCC  
                                     __end_of_RB5_ISR 1BB2                                       __end_of_RB6_ISR 1B98  
                                     __end_of_RB7_ISR 1B7E                                                  l2009 1A26  
                                                l6000 1746                                                  l5300 1B2A  
                                                l6020 19DC                                                  l6004 17A2  
                                                l6014 1AB8                                                  l6022 1A00  
                                                l6006 17CC                                                  l6030 1914  
                                                l6016 1AC4                                                  l6024 1A1A  
                                                l6120 142C                                                  l6112 13FC  
                                                l6032 1936                                                  l1961 1B2E  
                                                l1953 155E                                                  l1945 1414  
                                                l6018 19CC                                                  l6130 149C  
                                                l6122 1444                                                  l6114 13FC  
                                                l6034 193E                                                  l6026 18FC  
                                                l1963 1B32                                                  l6140 151E  
                                                l6132 14B6                                                  l6124 145C  
                                                l6116 1410                                                  l6036 1968  
                                                l6028 1902                                                  l1965 1B40  
                                                l1966 1B42                                                  l6150 1548  
                                                l6142 1540                                                  l6134 14D0  
                                                l6126 1476                                                  l6118 1416  
                                                l6152 155C                                                  l6144 1542  
                                                l6136 14DC                                                  l6128 1490  
                                                l1896 1AB6                                                  l6146 1544  
                                                l6138 14FC                                                  l6148 1546  
                                                l1997 1AE8                                                  l6238 1A7E  
                                                l5296 1B18                                                  l5298 1B18  
                                                l6740 17B6                                                  l6742 168A  
                                                l5970 1576                                                  l6690 17F4  
                                                l5980 165E                                                  l5972 1598  
                                                l6692 180E                                                  l5974 15A0  
                                                l5982 16A0                                                  l5966 1560  
                                                l5990 16A4                                                  l6694 181E  
                                                l6686 17D0                                                  l5976 1602  
                                                l5968 1564                                                  l5992 16A8  
                                                l6696 1838                                                  l6688 17E4  
                                                l5994 16BA                                                  l6698 1848  
                                                l5996 16DC                                                  l5998 16E4  
                                                STR_1 1001                                                  _LATA 0F89  
                                                _LATB 0F8A                                                  _LATC 0F8B  
                                                _LATD 0F8C                                                  _LATE 0F8D  
                                                u3350 1B2A                                                  u3351 1B26  
                                                u3360 1B40                                                  u3361 1B3C  
                                                u4520 1676                                                  u4504 15C0  
                                                u4600 1936                                                  u4521 1670  
                                                u4505 15BC                                                  u4601 1932  
                                                u4530 1678                                                  u4514 1622  
                                                u4515 161E                                                  u5307 1800  
                                                u4700 145C                                                  u4540 16BA  
                                                u4701 1458                                                  u4541 16B6  
                                                u5317 182A                                                  u4710 1476  
                                                u4550 16DC                                                  u4711 1472  
                                                u4551 16D8                                                  u5327 1854  
                                                u4480 1576                                                  u4720 1490  
                                                u4481 1572                                                  u4721 148C  
                                                u4490 1598                                                  u4730 14B6  
                                                u4491 1594                                                  u4731 14B2  
                                                u4580 1A1A                                                  u4740 14D0  
                                                u4564 1704                                                  u4581 1A16  
                                                u4741 14CC                                                  u4565 1700  
                                                u4574 1766                                                  u4590 1914  
                                                u4575 1762                                                  u4591 1910  
                                                u4680 1410                                                  u4681 140C  
                                                u4690 1444                                                  u4691 1440  
                                                _TMR2 0FCC                              _RB4_InterruptHandler_LOW 0025  
                                                _lcd1 00C8                                                  _lcd2 00A2  
                                                _led1 0059                                                  _led2 0058  
                                                _led3 0057                                                  _main 17D0  
                                                _val1 0035                                      __end_of_CCP1_ISR 1C20  
                                    __end_of_CCP2_ISR 1C1C                              _RB7_InterruptHandler_LOW 0019  
                                                fsr2h 0FDA                                                  indf2 0FDF  
                                                fsr1l 0FE1                                                  fsr2l 0FD9  
                                                btemp 0072                                                  prodh 0FF4  
                                                prodl 0FF3                                                  start 000E  
                                        ___param_bank 0000                                ?_gpio_pin_toggle_logic 005A  
                                _gpio_pin_write_logic 16A4                                        ?_SPI_Send_Byte 0067  
                                    __end_of_INT0_ISR 1C14                                      __end_of_INT1_ISR 1C10  
                                    __end_of_INT2_ISR 1C0C                                         _EUSART_RX_ISR 1C24  
                                       _EUSART_TX_ISR 1C14                                                 ?_main 005A  
                                               _EEADR 0FA9                                                 i2l523 1C22  
                                               i2l650 1C1A                                                 i2l645 1C1E  
                                               i2l850 18FA                                                 i2l974 1C12  
                                               i2l984 1C0A                                                 i2l979 1C0E  
                                               i2l995 1BCA                                                 _RCREG 0FAE  
                                               _TMR0H 0FD7                                                 _TMR1H 0FCF  
                                               _TMR0L 0FD6                                                 _TMR1L 0FCE  
                                               _TMR3H 0FB3                                                 _TMR3L 0FB2  
                                               _SPBRG 0FAF                                                 _PORTA 0F80  
                                               _PORTB 0F81                                                 _PORTC 0F81  
                                               _PORTD 0F83                                                 _PORTE 0F84  
                                               _TRISA 0F92                                                 _TRISB 0F93  
                                               _TRISC 0F94                                                 _TRISD 0F95  
                                               _TRISE 0F96                                                 _TXREG 0FAD  
                                    __end_of_TMR0_ISR 1C00                                      __end_of_TMR1_ISR 1BF4  
                                    __end_of_TMR2_ISR 1C08                                      __end_of_TMR3_ISR 1BE8  
                                               pclath 0FFA                                                 pclatu 0FFB  
                                               tablat 0FF5                                                 ttemp5 0073  
                                               ttemp6 0076                                                 ttemp7 007A  
                                               status 0FD8                                                 wtemp8 0073  
                      ?_gpio_pin_direction_initialize 0067                                       __initialization 1A28  
                                        __end_of_main 186A                                 ?_gpio_pin_write_logic 0067  
                                           ??_ADC_ISR 005A                                        ?_EUSART_RX_ISR 005A  
                                      ?_EUSART_TX_ISR 005A                                         _lat_registers 003B  
                                              ??_main 00E5                                         __activetblptr 0003  
                               _TMR3_InterruptHandler 000D                                             ??_RB4_ISR 005A  
                                           ??_RB5_ISR 005A                                             ??_RB6_ISR 005A  
                                           ??_RB7_ISR 005A                            _EUSART_OverrunErrorHandler 0003  
                                              _ADRESH 0FC4                                                _EEADRH 0FAA  
                                              _ADRESL 0FC3                                                _EEDATA 0FA8  
                                              _CCPR1L 0FBE                                                _CCPR2L 0FBB  
                                              _EECON2 0FA7                                                i2l1006 1BB0  
                                              i2l1017 1B96                                                i2l1028 1B7C  
                                              i2l2013 1B16                                                i2l1251 1040  
                                              i2l1261 114C                                                i2l1253 1060  
                                              i2l3102 1BCA                                                i2l3110 1B9C  
                                              i2l1271 12A0                                                i2l1263 1190  
                                              i2l1255 1080                                                i2l1360 1BFE  
                                              i2l3200 1BE8                                                i2l1281 1340  
                                              i2l1273 12C0                                                i2l1265 11D4  
                                              i2l1257 10C4                                                i2l3130 1B96  
                                              i2l3122 1B80                                                i2l3202 1BEA  
                                              i2l1602 1BE6                                                i2l1283 1360  
                                              i2l1275 12E0                                                i2l1267 1218  
                                              i2l1259 1108                                                i2l3052 1C1C  
                                              i2l3220 1C14                                                i2l3116 1BB0  
                                              i2l3108 1B9A                                                i2l3124 1B82  
                                              i2l3204 1BEE                                                i2l1532 1C06  
                                              i2l3212 1BDC                                                i2l1292 13E0  
                                              i2l1285 1380                                                i2l1277 1300  
                                              i2l1269 125C                                                i2l3214 1BDE  
                                              i2l1455 1BF2                                                i2l1287 13A0  
                                              i2l1279 1320                                                i2l3048 1C20  
                                              i2l3144 1B7C                                                i2l3136 1B66  
                                              i2l3208 1C00                                                i2l3216 1BE2  
                                              i2l1289 13C0                                                i2l3058 1C18  
                                              i2l3226 1C24                                                i2l3082 1C0C  
                                              i2l3138 1B68                                                i2l3076 1C10  
                                              i2l3094 1BB4                                                i2l1760 1C16  
                                              i2l3088 1C08                                                i2l3096 1BB6  
                                              i2l3192 1BF4                                                i2l5050 186A  
                                              i2l3194 1BF6                                                i2l5052 187C  
                                              i2l3196 1BFA                                                i2l5054 189E  
                                              i2l5056 18A2                                                i2l5048 186A  
                                              i2l5160 1BCE                                                i2l1769 1C24  
                                              i2l1881 1BDA                                                i2l5158 1BCC  
                                              i2l5290 1AEC                                                i2l5292 1AFE  
                                              i2l5288 1AEA                                                i2l5810 103C  
                                              i2l5900 12AE                                                i2l5820 108E  
                                              i2l5812 104E                                                i2l5910 12FC  
                                              i2l5902 12BC                                                i2l5830 10D2  
                                              i2l5822 109C                                                i2l5814 105C  
                                              i2l5806 1020                                                i2l5920 134E  
                                              i2l5912 130E                                                i2l5904 12CE  
                                              i2l5840 1116                                                i2l5832 10E0  
                                              i2l5824 10AA                                                i2l5816 106E  
                                              i2l5808 102E                                                i2l5930 139C  
                                              i2l5922 135C                                                i2l5914 131C  
                                              i2l5906 12DC                                                i2l5850 115A  
                                              i2l5842 1124                                                i2l5834 10EE  
                                              i2l5826 10BA                                                i2l5818 107C  
                                              i2l5932 13AE                                                i2l5924 136E  
                                              i2l5916 132E                                                i2l5908 12EE  
                                              i2l5860 119E                                                i2l5852 1168  
                                              i2l5844 1132                                                i2l5836 10FE  
                                              i2l5828 10BE                                                i2l5934 13BC  
                                              i2l5926 137C                                                i2l5918 133C  
                                              i2l5870 11E2                                                i2l5862 11AC  
                                              i2l5854 1176                                                i2l5846 1142  
                                              i2l5838 1102                                                i2l5936 13CE  
                                              i2l5928 138E                                                i2l5880 1226  
                                              i2l5872 11F0                                                i2l5864 11BA  
                                              i2l5856 1186                                                i2l5848 1146  
                                              i2l5938 13DC                                                i2l5890 126A  
                                              i2l5882 1234                                                i2l5874 11FE  
                                              i2l5866 11CA                                                i2l5858 118A  
                                              i2l5892 1278                                                i2l5884 1242  
                                              i2l5876 120E                                                i2l5868 11CE  
                                              i2l5894 1286                                                i2l5886 1252  
                                              i2l5878 1212                                                i2l5896 1296  
                                              i2l5888 1256                                                i2l5898 129A  
                            _MSSP_SPI_Mode_Initialize 13FC                                                _SPBRGH 0FB0  
                                              _SSPBUF 0FC9                                                _SPI_SS 0056  
                    gpio_pin_toggle_logic@_pin_config 005A                                       ??_SPI_Send_Byte 006A  
                                              clear_0 1A6E                                                _motor1 0047  
                                              _motor2 0045                                                isa$std 0001  
                                           ?_CCP1_ISR 005A                                          __pdataCOMRAM 003B  
                                           ?_CCP2_ISR 005A                                          __mediumconst 0000  
                                              tblptrh 0FF7                                                tblptrl 0FF6  
                                              tblptru 0FF8                                            __accesstop 0080  
                             __end_of__initialization 1A74                                             ?_INT0_ISR 005A  
                                           ?_INT1_ISR 005A                                             ?_INT2_ISR 005A  
                                       ___rparam_used 0001                                     RB5_ISR@RB5_Source 005A  
                              ??_gpio_pin_write_logic 006A                                        __pcstackCOMRAM 005A  
                                        __pidataBANK0 196E                                             ?_TMR0_ISR 005A  
                                     ??_EUSART_RX_ISR 005A                                             ?_TMR1_ISR 005A  
                                           ?_TMR2_ISR 005A                                             ?_TMR3_ISR 005A  
                                     ??_EUSART_TX_ISR 005A                                 SPI_Send_Byte@SPI_Inst 0067  
            gpio_pin_direction_initialize@_pin_config 0067                                            ??_CCP1_ISR 005A  
                                          ??_CCP2_ISR 005A                                 _INT0_InterruptHandler 002D  
                                          ??_INT0_ISR 005A                                            ??_INT1_ISR 005A  
                                          ??_INT2_ISR 005A                               ??_gpio_pin_toggle_logic 005C  
                                          ??_TMR0_ISR 005A                                            ??_TMR1_ISR 005A  
                                          ??_TMR2_ISR 005A                                            ??_TMR3_ISR 005A  
 __end_of_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 1A28          ?_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 0070  
       ??_MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 00DD           _MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations 19CC  
                                             _ADC_ISR 1C20                                     RB7_ISR@RB7_Source 005A  
                                             _BUTTON1 0051                                               _RB4_ISR 1BB2  
                                             _RB5_ISR 1B98                                               _RB6_ISR 1B7E  
                                             _RB7_ISR 1B64                             _RB6_InterruptHandler_HIGH 001F  
                                       _keypad_values 0092                                               i2u53_40 1BC6  
                                             i2u53_41 1BC2                                               i2u54_40 1BAC  
                                             i2u54_41 1BA8                                               i2u55_40 1B92  
                                             i2u55_41 1B8E                                               i2u56_40 1B78  
                                             i2u56_41 1B74                                     __end_of_led2_func 1BDC  
                                      _tris_registers 00B6                              _RB6_InterruptHandler_LOW 001D  
                                       ?_MSSP_SPI_ISR 005A                                  _ADC_InterruptHandler 0033  
                                             __Hparam 0000                                               __Lparam 0000  
                                _SPI_InterruptHandler 0001                                   _gpio_pin_initialize 18FC  
                                        __psmallconst 1000                                               __pcinit 1A28  
                                          _button_val 0037  __end_of_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations 1AEA  
      ??_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations 0072         ?_MSSP_SPI_Master_Mode_GPIO_PIN_Configurations 0070  
        _MSSP_SPI_Master_Mode_GPIO_PIN_Configurations 1AB8                                               __ramtop 1000  
                                          _master_val 0038                                               __ptext0 17D0  
                                             __ptext1 1A7E                                               __ptext2 18FC  
                                             __ptext3 16A4                                               __ptext4 13FC  
                                             __ptext5 19CC                                               __ptext6 1AB8  
                                             __ptext7 1560                                               __ptext8 1B18  
                                           _T0CONbits 0FD5                                             _T1CONbits 0FCD  
                     ??_gpio_pin_direction_initialize 0069                                             _T2CONbits 0FCA  
                                             _keypad1 00C0                                             _T3CONbits 0FB1  
                                   __end_of_initalize 1AB8                            ??_MSSP_SPI_Mode_Initialize 00E4  
                                ?_gpio_pin_initialize 00DD                                        __pintcode_body 1006  
                                end_of_initialization 1A74                                               int_func 1006  
                                      ??_MSSP_SPI_ISR 0061                                             _RCSTAbits 0FAB  
                                             postdec1 0FE5                                               postdec2 0FDD  
                                             postinc0 0FEE                                               postinc2 0FDE  
                               _INT1_InterruptHandler 002B                                             _PORTBbits 0F81  
                                    _InterruptManager 0008    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_CLK 00E0  
 MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_CLK 00DF    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDI 00DF  
 MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDI 00DE    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SDO 00DE  
 MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_SDO 00DD                                             _TRISCbits 0F94  
                                          _port_state 0036                                 ??_gpio_pin_initialize 0071  
                                         _CCP1CONbits 0FBD                                           _CCP2CONbits 0FBA  
                                           _TXSTAbits 0FAC                                            _usart_obj1 0080  
                               __end_of_SPI_Send_Byte 1B44                                           _BAUDCONbits 0FB8  
                                       __pidataCOMRAM 1B44                                        _timer0_preload 0015  
                                      _timer1_preload 0011                                        _timer2_preload 003A  
                                 start_initialization 1A28                                        _timer3_preload 000B  
   MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3160 004D      MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3170 0049  
   MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3156 004F      MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3164 004C  
   MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@F3158 004E      MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3166 004B  
    MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@F3168 004A                 __end_of_gpio_pin_direction_initialize 16A4  
                       _gpio_pin_direction_initialize 1560                                       _spi_obj1_master 00D8  
                    MSSP_SPI_Mode_Initialize@SPI_Inst 00E2                             _EUSART_RxInterruptHandler 0007  
                       __end_of_gpio_pin_toggle_logic 18FC                            _EUSART_FramingErrorHandler 0005  
                                         __pdataBANK0 0080                                              ?_ADC_ISR 005A  
                               __end_of_EUSART_RX_ISR 1C26                                 __end_of_EUSART_TX_ISR 1C18  
                                __end_of_MSSP_SPI_ISR 1B18                                              ?_RB4_ISR 005A  
                                            ?_RB5_ISR 005A                                              ?_RB6_ISR 005A  
                                            ?_RB7_ISR 005A                                           __pbssCOMRAM 0001  
                                       __pcstackBANK0 00DD                                 _INT2_InterruptHandler 0029  
                               _TMR0_InterruptHandler 0017                                             _led2_func 1BCC  
                                  SPI_Send_Byte@_data 0069                                             __pintcode 0008  
                     gpio_pin_write_logic@_pin_config 0067                             gpio_pin_write_logic@logic 0069  
                                         __smallconst 1000                             _RB4_InterruptHandler_HIGH 0027  
                                            _CCP1_ISR 1C1C                                              _CCP2_ISR 1C18  
                           _RB7_InterruptHandler_HIGH 001B                                             _initalize 1A7E  
                            _RB5_InterruptHandler_LOW 0021                                              _INT0_ISR 1C10  
                                            _INT1_ISR 1C0C                                              _INT2_ISR 1C08  
                                            _RB4_Flag 0055                                              _RB5_Flag 0054  
                                            _RB6_Flag 0053                                              _RB7_Flag 0052  
                                   RB4_ISR@RB4_Source 005A                              __end_of_InterruptManager 13FC  
                                            _PIE1bits 0F9D                                              _PIE2bits 0FA0  
                                          ?_led2_func 005A                                              i2u301_40 187C  
                                            i2u301_41 1878                                              i2u302_40 189E  
                                            i2u302_41 189A                                              i2u303_44 18C2  
                                            i2u303_45 18BE                                              i2u400_40 10D2  
                                            i2u400_41 10CE                                              i2u401_40 10E0  
                                            i2u401_41 10DC                                              i2u410_40 1176  
                                            i2u402_40 10EE                                              i2u410_41 1172  
                                            i2u402_41 10EA                                              i2u411_40 1186  
                                            i2u403_40 10FE                                              i2u411_41 1182  
                                            i2u403_41 10FA                                              i2u420_40 1226  
                                            i2u412_40 119E                                              i2u404_40 1116  
                                            i2u420_41 1222                                              i2u412_41 119A  
                                            i2u404_41 1112                                              i2u333_40 1AFE  
                                            i2u421_40 1234                                              i2u413_40 11AC  
                                            i2u405_40 1124                                              i2u333_41 1AFA  
                                            i2u421_41 1230                                              i2u413_41 11A8  
                                            i2u405_41 1120                                              i2u430_40 12CE  
                                            i2u422_40 1242                                              i2u414_40 11BA  
                                            i2u406_40 1132                                              i2u430_41 12CA  
                                            i2u422_41 123E                                              i2u414_41 11B6  
                                            i2u406_41 112E                                              i2u334_48 1B04  
                                            i2u431_40 12DC                                              i2u423_40 1252  
                                            i2u415_40 11CA                                              i2u407_40 1142  
                                            i2u334_49 1B16                                              i2u431_41 12D8  
                                            i2u423_41 124E                                              i2u415_41 11C6  
                                            i2u407_41 113E                                              i2u440_40 136E  
                                            i2u432_40 12EE                                              i2u424_40 126A  
                                            i2u416_40 11E2                                              i2u408_40 115A  
                                            i2u440_41 136A                                              i2u432_41 12EA  
                                            i2u424_41 1266                                              i2u416_41 11DE  
                                            i2u408_41 1156                                              i2u441_40 137C  
                                            i2u433_40 12FC                                              i2u425_40 1278  
                                            i2u417_40 11F0                                              i2u409_40 1168  
                                            i2u441_41 1378                                              i2u433_41 12F8  
                                            i2u425_41 1274                                              i2u417_41 11EC  
                                            i2u409_41 1164                                              _PIR1bits 0F9E  
                                            i2u442_40 138E                                              i2u434_40 130E  
                                            i2u426_40 1286                                              i2u418_40 11FE  
                                            i2u442_41 138A                                              i2u434_41 130A  
                                            i2u426_41 1282                                              i2u418_41 11FA  
                                            i2u443_40 139C                                              i2u435_40 131C  
                                            i2u427_40 1296                                              i2u419_40 120E  
                                            i2u443_41 1398                                              i2u435_41 1318  
                                            i2u427_41 1292                                              i2u419_41 120A  
                                            _PIR2bits 0FA1                                              i2u444_40 13AE  
                                            i2u436_40 132E                                              i2u428_40 12AE  
                                           _ret_state 0050                                              i2u444_41 13AA  
                                            i2u436_41 132A                                              i2u428_41 12AA  
                                            i2u445_40 13BC                                              i2u437_40 133C  
                                            i2u429_40 12BC                                              i2u445_41 13B8  
                                            i2u437_41 1338                                              i2u429_41 12B8  
                                            i2u446_40 13CE                                              i2u438_40 134E  
                                            i2u390_40 102E                                              i2u446_41 13CA  
                                            i2u438_41 134A                                              i2u390_41 102A  
                                            i2u447_40 13DC                                              i2u439_40 135C  
                                            i2u391_40 103C                                              i2u447_41 13D8  
                                            i2u439_41 1358                                              i2u391_41 1038  
                                            i2u392_40 104E                                              i2u392_41 104A  
                                            i2u393_40 105C                                              i2u393_41 1058  
                                            i2u394_40 106E                                              i2u394_41 106A  
                                            i2u395_40 107C                                              i2u395_41 1078  
                                            i2u396_40 108E                                              i2u396_41 108A  
                                            i2u397_40 109C                                              i2u397_41 1098  
                                            i2u398_40 10AA                                              i2u398_41 10A6  
                                            i2u399_40 10BA                                              i2u399_41 10B6  
                    gpio_pin_direction_initialize@ret 006F                                              _TMR0_ISR 1BF4  
                                            _TMR1_ISR 1BE8                                              _TMR2_ISR 1C00  
                                            _TMR3_ISR 1BDC     MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_SS 00E1  
                                          _ADCON0bits 0FC2                                            _ADCON1bits 0FC1  
                                          _ADCON2bits 0FC0                                      _program_selector 0039  
                              gpio_pin_initialize@ret 00DF                               gpio_pin_write_logic@ret 0070  
                                          ?_initalize 005A                                           _INTCON2bits 0FF1  
                                         _INTCON3bits 0FF0                                             copy_data0 1A3C  
                                           copy_data1 1A5C                                        _spi_obj1_slave 00CE  
                                          _EECON1bits 0FA6                                              __Hrparam 0000  
                           ?_MSSP_SPI_Mode_Initialize 00E2                                              __Lrparam 0000  
                                   RB6_ISR@RB6_Source 005A                                 _CCP1_InterruptHandler 0031  
                         __end_of_gpio_pin_initialize 196E                        gpio_pin_initialize@_pin_config 00DD  
                               _TMR1_InterruptHandler 0013                                              __ptext10 1BDC  
                                            __ptext11 1C00                                              __ptext20 186A  
                                            __ptext12 1BE8                                              __ptext21 1C08  
                                            __ptext13 1BF4                                              __ptext22 1C0C  
                                            __ptext14 1B64                                              __ptext23 1C10  
                                            __ptext15 1B7E                                              __ptext24 1C14  
                                            __ptext16 1B98                                              __ptext25 1C24  
                                            __ptext17 1BB2                                              __ptext26 1C18  
                                            __ptext18 1AEA                                              __ptext27 1C1C  
                                            __ptext19 1BCC                                              __ptext28 1C20  
                                            __ptext29 0000                                          _MSSP_SPI_ISR 1AEA  
                                         ??_led2_func 0061                                              _sev_seg1 00D3  
                                            isa$xinst 0000                                              int$flags 0072  
                                          _INTCONbits 0FF2                          __end_of_gpio_pin_write_logic 17D0  
                                         ??_initalize 0072                                              intlevel2 0000  
                           _EUSART_TxInterruptHandler 0009                                 _gpio_pin_toggle_logic 186A  
                                      _port_registers 00AC                                          fp__led2_func 0000  
                                         _SSPCON1bits 0FC6                                 _CCP2_InterruptHandler 002F  
                               _TMR2_InterruptHandler 000F                                     ?_InterruptManager 005A  
 MSSP_SPI_Slave_Mode_GPIO_PIN_Configurations@SPI_Inst 0070  MSSP_SPI_Master_Mode_GPIO_PIN_Configurations@SPI_Inst 0070  
